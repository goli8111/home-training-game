{"version":3,"sources":["two.mp3","actions/scene.js","components/posenet/data/PosenetMath.js","components/posenet/PosenetUtils.js","components/utils/CanvasFPS.js","actions/posenet.js","components/posenet/PosenetCamera.js","components/posenet/PosenetImage.js","components/posenet/data/PoseCommon.js","components/posenet/PosenetVideo.js","components/posenet/data/Squats.js","components/posenet/PosenetPoseValid.js","scene/PoseNetCameraScene.js","scene/PoseNetImageScene.js","scene/PoseNetVideoScene.js","components/utils/SecondCountdown.js","actions/countdown.js","components/PoseNetGame/PosenetDooDoongPlay.js","actions/score.js","components/PoseNetGame/PosenetPoseScan.js","components/PoseNetGame/PosenetGameReadyCountdown.js","scene/GameDooDoongScene.js","components/PoseNetGame/PosenetFrogJumpTutorial.js","components/PoseNetGame/PosenetFrogJumpPlay.js","scene/GameFrogJumpScene.js","components/posenet/data/Plank.js","components/PoseNetGame/PosenetTowerOfBebelTutorial.js","components/PoseNetGame/PosenetTowerOfBabelPlay.js","scene/GameTowerOfBabelScene.js","scene/SceneNavigation.js","scene/IndexScene.js","App.js","serviceWorker.js","reducers/scene.js","reducers/posenet.js","reducers/countdown.js","reducers/score.js","reducers/index.js","index.js"],"names":["module","exports","set_scene","change_scene","type","_change_scene","SetSubScene","changeSubScene","_changeSubScene","Posenet_GetDegreeFormVec","vec","pivotVec","cos","get_cos","degree","parseInt","Math","acos","PI","x","Posenet_GetDegreeFormVec2","vec1","vec2","InBoundaryDegree","targetDegree","currentDegree","boundaryDegree","abs","abs_value","distance","pow","y","sqrt","partA","partB","_canvasLastCalledTime","_canvasFPS","toTuple","drawKeyPoints","keypoints","minConfidence","skeletonColor","canvasContext","scale","forEach","keypoint","score","position","beginPath","arc","fillStyle","fill","drawSegment","color","lineWidth","firstX","firstY","nextX","nextY","startX","startY","endX","endY","moveTo","lineTo","dx","dy","angle","atan2","sin","drawLine","strokeStyle","stroke","drawSkeleton","adjacentKeyPoints","posenet","drawDegree","font","textAlign","skelectonDir","current_angle","posX","posY","fillText","drawSkeletonDegree","_canvasFPSCount","_canvasTextColor","_canvasTextSize","CanvasFPS_Update","Date","now","CanvasFPS_Render","ClosePosenet","state","_closePosenet","PoseNetCamera","props","defaultProps","getCanvas","elem","canvas","getCanvasOverlay","canvasOverlay","getVideo","video","resize","bind","stopCamera","this","setupCamera","Error","setTimeout","setState","loading","detectPose","window","addEventListener","removeEventListener","console","log","undefined","showMiniVideo","screenWidth","innerWidth","screenHeight","innerHeight","style","left","top","setAttribute","width","height","navigator","mediaDevices","getUserMedia","display","transform","audio","facingMode","stream","srcObject","Promise","resolve","onloadedmetadata","play","pause","src","getTracks","stop","onPosenetPose","getContext","showVideo","poseDetectionFrame","algorithm","imageScaleFactor","flipHorizontal","outputStride","minPoseConfidence","minPartConfidence","maxPoseDetections","nmsRadius","showDebugVideo","showPoints","showSkeleton","showSkeletonDegree","skeletonDegreeColor","skeletonLineWidth","posenetModel","findPoseDetectionFrame","a","poses","estimateMultiplePoses","estimateSinglePose","pose","push","clearRect","save","translate","drawImage","restore","onClosePosenet","requestAnimationFrame","id","zIndex","playsInline","ref","Component","loadingText","connect","_current_scene","scene","dispatch","poseData","_posenetPose","PoseNetImage","getImage","img","showImage","imgsrc","imageWidth","imageHeight","showDebugImage","keypointColor","event","reader","FileReader","onload","document","getElementById","result","readAsDataURL","target","files","accept","onChange","onSelectImage","onLoad","onImgLoadComplete","right","PoseCommon_InScreenPose","PoseCommon_GetAngleFromThreeParts","partC","partAPos","PoseCommon_GetPosition","partBPos","partCPos","vecA","vecB","part","index","PoseCommon_GetPartIndex","PoseCommon_GetPositionWithinConfidence","cutScore","_stopVideo","PoseNetVideo","videoWidth","videoHeight","readyState","paused","onSelectVideo","onLoadedData","onVideoLoadComplete","loop","autoPlay","onClick","onVideoClick","Squats_Step1","leftPartAPos","leftPartBPos","leftPartCPos","leftVecA","leftVecB","Squats_Step2","beep","UIFx","asset","mp3File","useStyles","makeStyles","theme","root","_poseStep","_poseCount","mapDispatchToProps","classes","className","video_root","flexGrow","frameBorder","camera_root","PoseNetCameraScene","PoseNetImageScene","PoseNetVideoScene","StartCountdown","duration","callbackSeconds","callbackComplete","timer","_countdownTimer","setInterval","clearInterval","SetCountDown","countdown","_countdown","_countdownUpdateIntervalValue","SetDooDoongScore","_doodoongScore","useEffect","updateNpc","render_canvas","updateNpcDespawn","updateNpcSpawn","updateNpcTouch","part_position1","configData","MinPartConfidenceForTouch","part_position2","part_position3","part_position4","part_position5","checkPosList","map","slotData","data","npc","pointRadius","radius","diffX","diffY","sound","npcLifeTime","npcData","lifeTime","spawnTime","spawnIndex","floor","random","length","npcIndex","newNpc","render_slot","globalAlpha","setLineDash","lineDashOffset","targetNpcData","renderRadius","min","image","render_npc","fontSize","shadowColor","shadowBlur","shadowOffsetX","shadowOffsetY","render_timer","render_score","render_camera_distance","preload","render_Canvas","percent","render_scan","maxHeight","wrapper","border","countdown_renderer","playButton","bottom","margin","skipButton","largeIcon","SCENE_TYPE","_sceneType","React","useState","_step","setStep","changeSceneType","change","preScene","nextScene","ReadyCountdown","updateCountdownSeconds","countdown_complete","PlayCountdown","seconds","getHowToPlayContent","key","IconButton","aria-label","onPlayClick","onSkipClick","getPoseNetCamera","getGameCountdownSceneCheck_Logic","PoseMinConfidenceForGameReady","getGameStopSceneCheck_Logic","getGameResult","contents","getStep","control_video","currentTime","render_title","_frogMoveDistance","_prevUpdateTime","_catMoveDistance","_gameFinished","SetFrogJumpScore","_frogJumpScore","update","elapsedTime","CatMoveSpeed","updatCatMove","targetDistance","addDistance","FrogMoveSpeed","updateFrogMove","rectWidth","fillRect","gridCount","startDistance","TapelineCutlineForShift","leftDecimal","rightDecimal","i","currentDistance","currentY","render_tapeline","catSize","render_cat","frogSize","ratio","jumpHeight","render_frog","render_finish","_currentSubScene","getPoseNetMiniCamera","getTutorialScanSceneCheck_Logic","getTutorialSceneCheck_Logic","getGamePlaySceneCheck_Logic","getTutorialStopCheck_Logic","getGameScanSceneCheck_Logic","Plank_Step","PoseCommon_GetAngle","_addSpawnCount","SetTowerScore","_towerScore","updateGameFinish","GoalFloor","SpawnPerSecond","render_goal","targetPosition","render_floor","value","setValue","BottomNavigation","newValue","showLabels","BottomNavigationAction","label","icon","getActiveScene","App","Boolean","location","hostname","match","initialState","combineReducers","action","Object","assign","appElement","devTools","__REDUX_DEVTOOLS_EXTENSION__","store","createStore","rootReducer","ReactDOM","render","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.97a5442f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/two.433c9bba.mp3\";","export const SET_SCENE = 'SET_SCENE';\r\nexport function set_scene(change_scene) {\r\n    return {\r\n        type: SET_SCENE,\r\n        _change_scene: change_scene\r\n    };\r\n}\r\n\r\nexport const SETSUBSCENE = 'SETSUBSCENE';\r\nexport function SetSubScene(changeSubScene) {\r\n    return {\r\n        type: SETSUBSCENE,\r\n        _changeSubScene: changeSubScene\r\n    };\r\n}\r\n","\r\nexport function Posenet_GetDegreeFormVec(vec) {\r\n    var pivotVec = {};\r\n    pivotVec.x = 0;\r\n    pivotVec.y = -1;\r\n\r\n    var cos = get_cos(pivotVec, vec);\r\n    var degree = parseInt(Math.acos(cos) * (180 / Math.PI));\r\n    if (vec.x < 0) {\r\n        degree += 180;\r\n    }\r\n    return degree;\r\n}\r\n\r\nexport function Posenet_GetDegreeFormVec2(vec1, vec2) {\r\n    var cos = get_cos(vec1, vec2);\r\n    var degree = parseInt(Math.acos(cos) * (180 / Math.PI));\r\n    return degree;  \r\n}\r\n\r\nexport function InBoundaryDegree(targetDegree, currentDegree, boundaryDegree) {\r\n    var diffDegree = Math.abs(currentDegree - targetDegree);\r\n    if (diffDegree <= boundaryDegree) {\r\n        return true;\r\n    }\r\n    return false;\r\n}\r\n\r\nfunction abs_value(vec) {\r\n    var distance = Math.pow(vec.x - 0, 2) + Math.pow(vec.y - 0, 2);\r\n    return Math.sqrt(distance);\r\n}\r\n\r\nfunction get_cos(partA, partB) {\r\n    let dotProduct = ((partA.x * partB.x) + (partA.y * partB.y));\r\n    let cosineSimilarity = dotProduct / (abs_value(partA) * abs_value(partB));\r\n    return cosineSimilarity;\r\n}","import * as posenet from '@tensorflow-models/posenet'\r\nimport { Posenet_GetDegreeFormVec } from './data/PosenetMath'\r\n\r\nconst pointRadius = 3\r\n\r\nexport const KEYPOINT_COLOR_NAMES = [\r\n  \"AliceBlue\",\r\n  \"AntiqueWhite\",\r\n  \"Aqua\",\r\n  \"Aquamarine\",\r\n  \"Azure\",\r\n  \"Beige\",\r\n  \"Bisque\",\r\n  \"Black\",\r\n  \"BlanchedAlmond\",\r\n  \"Blue\",\r\n  \"BlueViolet\",\r\n  \"Brown\",\r\n  \"BurlyWood\",\r\n  \"CadetBlue\",\r\n  \"Chartreuse\",\r\n  \"Chocolate\",\r\n  \"Coral\",\r\n  \"CornflowerBlue\",\r\n  \"Cornsilk\",\r\n  \"Crimson\",\r\n  \"Cyan\",\r\n  \"DarkBlue\",\r\n  \"DarkCyan\",\r\n  \"DarkGoldenRod\",\r\n  \"DarkGray\",\r\n  \"DarkGrey\",\r\n  \"DarkGreen\",\r\n  \"DarkKhaki\",\r\n  \"DarkMagenta\",\r\n  \"DarkOliveGreen\",\r\n  \"DarkOrange\",\r\n  \"DarkOrchid\",\r\n  \"DarkRed\",\r\n  \"DarkSalmon\",\r\n  \"DarkSeaGreen\",\r\n  \"DarkSlateBlue\",\r\n  \"DarkSlateGray\",\r\n  \"DarkSlateGrey\",\r\n  \"DarkTurquoise\",\r\n  \"DarkViolet\",\r\n  \"DeepPink\",\r\n  \"DeepSkyBlue\",\r\n  \"DimGray\",\r\n  \"DimGrey\",\r\n  \"DodgerBlue\",\r\n  \"FireBrick\",\r\n  \"FloralWhite\",\r\n  \"ForestGreen\",\r\n  \"Fuchsia\",\r\n  \"Gainsboro\",\r\n  \"GhostWhite\",\r\n  \"Gold\",\r\n  \"GoldenRod\",\r\n  \"Gray\",\r\n  \"Grey\",\r\n  \"Green\",\r\n  \"GreenYellow\",\r\n  \"HoneyDew\",\r\n  \"HotPink\",\r\n  \"IndianRed\",\r\n  \"Indigo\",\r\n  \"Ivory\",\r\n  \"Khaki\",\r\n  \"Lavender\",\r\n  \"LavenderBlush\",\r\n  \"LawnGreen\",\r\n  \"LemonChiffon\",\r\n  \"LightBlue\",\r\n  \"LightCoral\",\r\n  \"LightCyan\",\r\n  \"LightGoldenRodYellow\",\r\n  \"LightGray\",\r\n  \"LightGrey\",\r\n  \"LightGreen\",\r\n  \"LightPink\",\r\n  \"LightSalmon\",\r\n  \"LightSeaGreen\",\r\n  \"LightSkyBlue\",\r\n  \"LightSlateGray\",\r\n  \"LightSlateGrey\",\r\n  \"LightSteelBlue\",\r\n  \"LightYellow\",\r\n  \"Lime\",\r\n  \"LimeGreen\",\r\n  \"Linen\",\r\n  \"Magenta\",\r\n  \"Maroon\",\r\n  \"MediumAquaMarine\",\r\n  \"MediumBlue\",\r\n  \"MediumOrchid\",\r\n  \"MediumPurple\",\r\n  \"MediumSeaGreen\",\r\n  \"MediumSlateBlue\",\r\n  \"MediumSpringGreen\",\r\n  \"MediumTurquoise\",\r\n  \"MediumVioletRed\",\r\n  \"MidnightBlue\",\r\n  \"MintCream\",\r\n  \"MistyRose\",\r\n  \"Moccasin\",\r\n  \"NavajoWhite\",\r\n  \"Navy\",\r\n  \"OldLace\",\r\n  \"Olive\",\r\n  \"OliveDrab\",\r\n  \"Orange\",\r\n  \"OrangeRed\",\r\n  \"Orchid\",\r\n  \"PaleGoldenRod\",\r\n  \"PaleGreen\",\r\n  \"PaleTurquoise\",\r\n  \"PaleVioletRed\",\r\n  \"PapayaWhip\",\r\n  \"PeachPuff\",\r\n  \"Peru\",\r\n  \"Pink\",\r\n  \"Plum\",\r\n  \"PowderBlue\",\r\n  \"Purple\",\r\n  \"RebeccaPurple\",\r\n  \"Red\",\r\n  \"RosyBrown\",\r\n  \"RoyalBlue\",\r\n  \"SaddleBrown\",\r\n  \"Salmon\",\r\n  \"SandyBrown\",\r\n  \"SeaGreen\",\r\n  \"SeaShell\",\r\n  \"Sienna\",\r\n  \"Silver\",\r\n  \"SkyBlue\",\r\n  \"SlateBlue\",\r\n  \"SlateGray\",\r\n  \"SlateGrey\",\r\n  \"Snow\",\r\n  \"SpringGreen\",\r\n  \"SteelBlue\",\r\n  \"Tan\",\r\n  \"Teal\",\r\n  \"Thistle\",\r\n  \"Tomato\",\r\n  \"Turquoise\",\r\n  \"Violet\",\r\n  \"Wheat\",\r\n  \"White\",\r\n  \"WhiteSmoke\",\r\n  \"Yellow\",\r\n  \"YellowGreen\",\r\n];\r\n\r\nexport const config = {\r\n  videoWidth: 900,\r\n  videoHeight: 700,\r\n  flipHorizontal: true,\r\n  algorithm: 'single-pose',\r\n  showVideo: true,\r\n  showSkeleton: true,\r\n  showPoints: true,\r\n  minPoseConfidence: 0.1,\r\n  minPartConfidence: 0.5,\r\n  maxPoseDetections: 2,\r\n  nmsRadius: 20,\r\n  outputStride: 16,\r\n  imageScaleFactor: 0.5,\r\n  skeletonColor: '#ffadea',\r\n  skeletonLineWidth: 6,\r\n  loadingText: 'Loading...please be patient...'\r\n}\r\n\r\nfunction isAndroid() {\r\n  return /Android/i.test(navigator.userAgent);\r\n}\r\n\r\nfunction isiOS() {\r\n  return /iPhone|iPad|iPod/i.test(navigator.userAgent);\r\n}\r\n\r\nexport function isMobile() {\r\n  return isAndroid() || isiOS();\r\n}\r\n\r\nfunction toTuple({x, y}) {\r\n  return [x, y]\r\n}\r\n\r\nexport function drawKeyPoints(\r\n  keypoints,\r\n  minConfidence,\r\n  skeletonColor,\r\n  canvasContext,\r\n  scale = 1\r\n) {\r\n  keypoints.forEach(keypoint => {\r\n    if (keypoint.score >= minConfidence) {\r\n      const {x, y} = keypoint.position\r\n      canvasContext.beginPath()\r\n      canvasContext.arc(x * scale, y * scale, pointRadius, 0, 2 * Math.PI)\r\n      canvasContext.fillStyle = skeletonColor\r\n      canvasContext.fill()\r\n    }\r\n  })\r\n}\r\n\r\nfunction drawLine(startX, startY, endX, endY, canvasContext) {\r\n  canvasContext.moveTo(startX, startY)\r\n  canvasContext.lineTo(endX, endY)\r\n\r\n  var headlen = 10;\r\n  var dx = endX - startX;\r\n  var dy = endY - startY;\r\n  var angle = Math.atan2(dy, dx);\r\n  canvasContext.moveTo(endX, endY)\r\n  canvasContext.lineTo(endX - headlen * Math.cos(angle - Math.PI / 6), endY - headlen * Math.sin(angle - Math.PI / 6))\r\n\r\n  canvasContext.moveTo(endX, endY)\r\n  canvasContext.lineTo(endX - headlen * Math.cos(angle + Math.PI / 6), endY - headlen * Math.sin(angle + Math.PI / 6))\r\n}\r\n\r\nfunction drawSegment(\r\n  [firstX, firstY],\r\n  [nextX, nextY],\r\n  color,\r\n  lineWidth,\r\n  scale,\r\n  canvasContext\r\n) {\r\n  canvasContext.beginPath()\r\n\r\n  drawLine(firstX * scale, firstY * scale, nextX * scale, nextY * scale, canvasContext)\r\n\r\n  canvasContext.lineWidth = lineWidth\r\n  canvasContext.strokeStyle = color\r\n  canvasContext.stroke()\r\n}\r\n\r\nexport function drawSkeleton(\r\n  keypoints,\r\n  minConfidence,\r\n  color,\r\n  lineWidth,\r\n  canvasContext,\r\n  scale = 1\r\n) {\r\n  const adjacentKeyPoints = posenet.getAdjacentKeyPoints(\r\n    keypoints,\r\n    minConfidence\r\n  )\r\n\r\n  adjacentKeyPoints.forEach(keypoints => {\r\n    drawSegment(\r\n      toTuple(keypoints[0].position),\r\n      toTuple(keypoints[1].position),\r\n      color,\r\n      lineWidth,\r\n      scale,\r\n      canvasContext\r\n    )\r\n  })\r\n}\r\n\r\nfunction drawDegree(\r\n  [firstX, firstY],\r\n  [nextX, nextY],\r\n  color,\r\n  canvasContext\r\n) {\r\n\r\n  canvasContext.font = \"20px Arial\";\r\n  canvasContext.fillStyle = color;\r\n  canvasContext.textAlign = \"center\";\r\n\r\n  var skelectonDir = {};\r\n  skelectonDir.x = nextX - firstX;\r\n  skelectonDir.y = nextY - firstY;\r\n\r\n  var current_angle = Posenet_GetDegreeFormVec(skelectonDir);\r\n\r\n  var posX = (firstX + nextX) / 2;\r\n  var posY = (firstY + nextY) / 2;\r\n  canvasContext.fillText(\"(\" + current_angle + \")\", posX, posY);\r\n\r\n  // canvasContext.beginPath()\r\n  // canvasContext.moveTo(firstX * scale, firstY * scale)\r\n  // canvasContext.lineTo(nextX * scale, nextY * scale)\r\n  // canvasContext.lineWidth = lineWidth\r\n  // canvasContext.strokeStyle = color\r\n  // canvasContext.stroke()\r\n}\r\n\r\nexport function drawSkeletonDegree(\r\n  keypoints,\r\n  minConfidence,\r\n  color,\r\n  lineWidth,\r\n  canvasContext,\r\n  scale = 1\r\n) {\r\n  const adjacentKeyPoints = posenet.getAdjacentKeyPoints(\r\n    keypoints,\r\n    minConfidence\r\n  )\r\n\r\n  adjacentKeyPoints.forEach(keypoints => {\r\n    drawDegree(\r\n      toTuple(keypoints[0].position),\r\n      toTuple(keypoints[1].position),\r\n      color,\r\n      lineWidth,\r\n      scale,\r\n      canvasContext\r\n    )\r\n  })\r\n}\r\n","var _canvasLastCalledTime;\r\nvar _canvasFPS;\r\nvar _canvasFPSCount = 0;\r\nvar _canvasTextColor = 'yellow';\r\nvar _canvasTextSize = 32;\r\n\r\nexport function CanvasFPS_Update() {\r\n    if (!_canvasLastCalledTime) {\r\n        _canvasLastCalledTime = Date.now();\r\n        _canvasFPS = 0;\r\n        _canvasFPSCount = 0;\r\n        return;\r\n    }\r\n    var delta = (Date.now() - _canvasLastCalledTime) / 1000;\r\n    if (delta >= 1) {\r\n        _canvasLastCalledTime = Date.now();\r\n        _canvasFPS = _canvasFPSCount;\r\n        _canvasFPSCount = 0;\r\n    }\r\n    else {\r\n        _canvasFPSCount++;\r\n    }\r\n}\r\n\r\nexport function CanvasFPS_FontColor(rgb) {\r\n    _canvasTextColor = rgb;\r\n}\r\n\r\nexport function CanvasFPS_FontSize(size) {\r\n    _canvasTextSize = size;\r\n}\r\n\r\nexport function CanvasFPS_Render(canvasContext) {\r\n    canvasContext.fillStyle = _canvasTextColor;\r\n    canvasContext.font = _canvasTextSize + \"px Arial\";\r\n    canvasContext.fillText(_canvasFPS, 10, _canvasTextSize+10);\r\n}","export const SETPOSENETPOSE = 'SETPOSENETPOSE';\r\nexport function SetPosenetPose(pose) {\r\n    return {\r\n        type: SETPOSENETPOSE,\r\n        _posenetPose: pose\r\n    };\r\n}\r\n\r\nexport const CLOSEPOSENET = 'CLOSEPOSENET';\r\nexport function ClosePosenet(state) {\r\n    //console.log('ClosePosenet action call');\r\n    return {\r\n        type: CLOSEPOSENET,\r\n        _closePosenet: state\r\n    };\r\n}\r\n\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux';\r\n\r\nimport * as posenet from '@tensorflow-models/posenet'\r\nimport { drawKeyPoints, drawSkeleton, drawSkeletonDegree } from './PosenetUtils'\r\nimport {CanvasFPS_Update, CanvasFPS_Render} from './../utils/CanvasFPS'\r\n//import { SetPoseData } from './data/PoseCommon'\r\nimport { SetPosenetPose, ClosePosenet } from '../../actions/posenet'\r\n\r\nclass PoseNetCamera extends Component {\r\n  static defaultProps = {\r\n    flipHorizontal: true,\r\n    algorithm: 'single-pose',\r\n    showMiniVideo: false,\r\n    showVideo: true,\r\n    showDebugVideo: false,\r\n    showSkeleton: true,\r\n    showPoints: true,\r\n    showSkeletonDegree: false,\r\n    minPoseConfidence: 0.7,\r\n    minPartConfidence: 0.5,\r\n    maxPoseDetections: 2,\r\n    nmsRadius: 20,\r\n    outputStride: 16,\r\n    imageScaleFactor: 0.5,\r\n    skeletonColor: '#ffadea',\r\n    skeletonDegreeColor: '#ff0000',\r\n    skeletonLineWidth: 6,\r\n    loadingText: 'Loading...please be patient...'\r\n  }\r\n\r\n  constructor(props) {\r\n    super(props, PoseNetCamera.defaultProps);\r\n    this.resize = this.resize.bind(this);\r\n    this.stopCamera = this.stopCamera.bind(this);\r\n  }\r\n\r\n  getCanvas = elem => {\r\n    this.canvas = elem\r\n  }\r\n\r\n  getCanvasOverlay = elem => {\r\n    this.canvasOverlay = elem\r\n  }\r\n  \r\n  getVideo = elem => {\r\n    this.video = elem;\r\n  }\r\n\r\n  async componentDidMount() {\r\n    this.resize();\r\n    try {\r\n      await this.setupCamera()\r\n    } catch (error) {\r\n      throw new Error(\r\n        'This browser does not support video capture, or this device does not have a camera'\r\n      )\r\n    }\r\n\r\n    try {\r\n      this.posenet = await posenet.load()\r\n    } catch (error) {\r\n      throw new Error('PoseNetCamera failed to load')\r\n    } finally {\r\n      setTimeout(() => {\r\n        this.setState({ loading: false })\r\n      }, 200)\r\n    }\r\n    this.detectPose();\r\n    window.addEventListener(\"resize\", this.resize);\r\n    //window.addEventListener(\"stopCamera\", this.stopCamera);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener(\"resize\", this.resize);\r\n    //window.removeEventListener(\"stopCamera\", this.stopCamera);\r\n  }\r\n\r\n  resize() {\r\n    console.log('resize start');\r\n    const video = this.video;\r\n    if (undefined == video) {\r\n      return;\r\n    }\r\n\r\n    const canvas = this.canvas;\r\n    if (undefined == canvas) {\r\n      return;\r\n    }\r\n\r\n    const canvasOverlay = this.canvasOverlay;\r\n    if (undefined == canvasOverlay) {\r\n      return;\r\n    }\r\n\r\n    const {showMiniVideo } = this.props;\r\n    var screenWidth = window.innerWidth;\r\n    var screenHeight = window.innerHeight;\r\n    if (true == showMiniVideo) {\r\n      screenWidth = screenWidth/3;\r\n      screenHeight = screenHeight/3;\r\n    }\r\n    console.log('resize apply:' + screenWidth + ',' + screenHeight);\r\n    video.style.position = 'fixed';\r\n\r\n    if (true == showMiniVideo) {\r\n      video.style.left = window.innerWidth - screenWidth + 'px';\r\n      video.style.top = window.innerHeight - screenHeight + 'px';\r\n    }\r\n    else {\r\n      video.style.left = '0px';\r\n      video.style.top = '0px';\r\n    }\r\n\r\n    video.setAttribute('width', screenWidth);\r\n    video.setAttribute('height', screenHeight);\r\n\r\n    if (true == showMiniVideo) {\r\n      canvas.style.left = window.innerWidth - screenWidth + 'px';\r\n      canvas.style.top = window.innerHeight - screenHeight + 'px';\r\n    }\r\n    else {\r\n      canvas.style.left = '0px';\r\n      canvas.style.top = '0px';\r\n    }\r\n    canvas.width = screenWidth;\r\n    canvas.height = screenHeight;\r\n\r\n    canvasOverlay.width = window.innerWidth;\r\n    canvasOverlay.height = window.innerHeight;\r\n  }\r\n\r\n  async setupCamera() {\r\n    if (!navigator.mediaDevices || !navigator.mediaDevices.getUserMedia) {\r\n      throw new Error(\r\n        'Browser API navigator.mediaDevices.getUserMedia not available'\r\n      )\r\n    }\r\n    // const {showVideo } = this.props\r\n    const video = this.video;\r\n    // if (false == showVideo) {\r\n    //   video.style.display = \"none\";\r\n    // }\r\n\r\n    video.style.display = \"none\";\r\n    video.style.transform = 'rotatey(180deg)';\r\n\r\n    var screenWidth = window.innerWidth;\r\n    var screenHeight = window.innerHeight;\r\n\r\n    const stream = await navigator.mediaDevices.getUserMedia({\r\n      audio: false,\r\n      video: {\r\n        facingMode: 'user',\r\n        width: screenWidth,\r\n        height: screenHeight\r\n      }\r\n    })\r\n\r\n    video.srcObject = stream;\r\n\r\n    return new Promise(resolve => {\r\n      video.onloadedmetadata = () => {\r\n        video.play()\r\n        resolve(video)\r\n      }\r\n    })\r\n  }\r\n\r\n  stopCamera() {\r\n    console.log('stopCamera call');\r\n    const video = this.video;\r\n    //console.log(video);\r\n    if (undefined == video) {\r\n      return;\r\n    }\r\n    video.pause();\r\n    video.src = \"\";\r\n    if (undefined != video.srcObject) {\r\n      //video.srcObject.stop();\r\n      video.srcObject.getTracks()[0].stop();\r\n      video.srcObject = undefined;\r\n    }\r\n    this.props.onPosenetPose(undefined);\r\n    console.log(\"video off\");\r\n  }\r\n\r\n  detectPose() {\r\n    const canvas = this.canvas\r\n    if (undefined == canvas) {\r\n      return;\r\n    }\r\n    const canvasContext = canvas.getContext('2d')\r\n    if (undefined == canvasContext) {\r\n      return;\r\n    }\r\n\r\n    const {showVideo } = this.props;\r\n    const video = this.video;\r\n    if (false == showVideo) {\r\n      video.style.display = \"none\";\r\n    }\r\n    else {\r\n      video.style.display = \"block\";\r\n    }\r\n\r\n    this.poseDetectionFrame(canvasContext)\r\n  }\r\n\r\n  poseDetectionFrame(canvasContext) {\r\n    const {\r\n      algorithm,\r\n      imageScaleFactor,\r\n      flipHorizontal,\r\n      outputStride,\r\n      minPoseConfidence,\r\n      minPartConfidence,\r\n      maxPoseDetections,\r\n      nmsRadius,\r\n      showDebugVideo,\r\n      showPoints,\r\n      showSkeleton,\r\n      showSkeletonDegree,\r\n      skeletonColor,\r\n      skeletonDegreeColor,\r\n      skeletonLineWidth\r\n    } = this.props\r\n    \r\n    const posenetModel = this.posenet\r\n    const video = this.video\r\n\r\n    const findPoseDetectionFrame = async () => {\r\n      let poses = []\r\n\r\n      switch (algorithm) {\r\n        case 'multi-pose': {\r\n          poses = await posenetModel.estimateMultiplePoses(\r\n            video,\r\n            imageScaleFactor,\r\n            flipHorizontal,\r\n            outputStride,\r\n            maxPoseDetections,\r\n            minPartConfidence,\r\n            nmsRadius\r\n          )\r\n          break\r\n        }\r\n        case 'single-pose': {\r\n          const pose = await posenetModel.estimateSinglePose(\r\n            video,\r\n            imageScaleFactor,\r\n            flipHorizontal,\r\n            outputStride\r\n          )\r\n          //SetPoseData(pose);\r\n          this.props.onPosenetPose(pose);\r\n          poses.push(pose)\r\n          break\r\n        }\r\n      }\r\n\r\n      const canvas = this.canvas;\r\n      if (true == showDebugVideo && undefined != canvas) {\r\n        // \r\n        canvasContext.clearRect(0, 0, canvas.width, canvas.height)\r\n        CanvasFPS_Update();\r\n        canvasContext.save();\r\n        canvasContext.scale(-1, 1)\r\n        canvasContext.translate(-canvas.width, 0)\r\n        canvasContext.drawImage(video, video.left, video.top, video.left+canvas.width/2, video.top+canvas.height)\r\n\r\n        poses.forEach(({ score, keypoints }) => {\r\n          if (score >= minPoseConfidence) {\r\n            if (showPoints) {\r\n              drawKeyPoints(\r\n                keypoints,\r\n                minPartConfidence,\r\n                skeletonColor,\r\n                canvasContext\r\n              )\r\n            }\r\n\r\n            if (showSkeleton) {\r\n              drawSkeleton(\r\n                keypoints,\r\n                minPartConfidence,\r\n                skeletonColor,\r\n                skeletonLineWidth,\r\n                canvasContext\r\n              )\r\n            }\r\n\r\n            if (showSkeletonDegree) {\r\n              drawSkeletonDegree(\r\n                keypoints,\r\n                minPartConfidence,\r\n                skeletonDegreeColor,\r\n                canvasContext\r\n              )\r\n            }\r\n          }\r\n        })\r\n        canvasContext.restore();\r\n        CanvasFPS_Render(canvasContext);\r\n      }\r\n\r\n      if ('start' == this.props._closePosenet) {\r\n        //console.log('stop Posenetcamera');\r\n        this.stopCamera();\r\n        this.props.onClosePosenet('complete');\r\n        return;\r\n      }\r\n      requestAnimationFrame(findPoseDetectionFrame)\r\n    }\r\n    findPoseDetectionFrame()\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n          <video id='videoCamera' style={{zIndex: '-2'}} src=\"\" playsInline ref={this.getVideo} />\r\n          <canvas style={{position: 'fixed', left: '0%', top: '0%', zIndex: '-1'}} ref={this.getCanvas} />\r\n          <canvas id='canvasOverlay' style={{position: 'fixed', left: '0%', top: '0%', zIndex: '-1'}} ref={this.getCanvasOverlay} />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    _current_scene: state.scene._current_scene,\r\n    _closePosenet: state.posenet._closePosenet\r\n  };\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n  return {\r\n      onPosenetPose: (poseData) => dispatch(SetPosenetPose(poseData)),\r\n      onClosePosenet: (state) => dispatch(ClosePosenet(state))\r\n  }\r\n}\r\n\r\nPoseNetCamera = connect(mapStateToProps, mapDispatchToProps)(PoseNetCamera);\r\n\r\nexport default PoseNetCamera;\r\n","import React, { Component } from 'react'\r\nimport * as posenet from '@tensorflow-models/posenet'\r\nimport { drawKeyPoints, drawSkeleton, drawSkeletonDegree } from './PosenetUtils'\r\n\r\n\r\n// https://github.com/kirstenlindsmith/PoseNet_React 구글 인증 추가\r\nclass PoseNetImage extends Component {\r\n    static defaultProps = {\r\n        flipHorizontal: true,\r\n        algorithm: 'single-pose',\r\n        showDebugImage: true,\r\n        showImage: false,\r\n        showSkeleton: true,\r\n        showPoints: true,\r\n        showSkeletonDegree: true,\r\n        minPoseConfidence: 0.1,\r\n        minPartConfidence: 0.5,\r\n        maxPoseDetections: 2,\r\n        nmsRadius: 20,\r\n        outputStride: 16,\r\n        imageScaleFactor: 0.5,\r\n        keypointColor: '#ff00ff',\r\n        skeletonColor: '#ffadea',\r\n        skeletonDegreeColor: '#ff0000',\r\n        skeletonLineWidth: 3,\r\n        loadingText: 'Loading...please be patient...'\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props, PoseNetImage.defaultProps)\r\n    }\r\n\r\n    getCanvas = elem => {\r\n        this.canvas = elem\r\n    }\r\n\r\n    getImage = elem => {\r\n        this.img = elem\r\n    }\r\n\r\n    async detectPose() {\r\n        const {\r\n            showImage,\r\n        } = this.props\r\n\r\n        const imgsrc = this.img;\r\n        const imageWidth = imgsrc.width;\r\n        const imageHeight = imgsrc.height;\r\n\r\n        if (false == showImage) {\r\n            imgsrc.style.display = \"none\";\r\n            imgsrc.width = imageWidth;\r\n            imgsrc.height = imageHeight;\r\n        }\r\n\r\n        try {\r\n            this.posenet = await posenet.load()\r\n        } catch (error) {\r\n            throw new Error('PoseNetImage failed to load')\r\n        } finally {\r\n            setTimeout(() => {\r\n                this.setState({ loading: false })\r\n            }, 200)\r\n        }\r\n\r\n        const canvas = this.canvas\r\n        const canvasContext = canvas.getContext('2d')\r\n\r\n        canvas.width = imgsrc.width\r\n        canvas.height = imgsrc.height\r\n\r\n        this.poseDetectionFrame(imgsrc, canvasContext)\r\n    }\r\n\r\n    poseDetectionFrame(img, canvasContext) {\r\n        const {\r\n            algorithm,\r\n            imageScaleFactor,\r\n            flipHorizontal,\r\n            outputStride,\r\n            minPoseConfidence,\r\n            minPartConfidence,\r\n            maxPoseDetections,\r\n            nmsRadius,\r\n            showDebugImage,\r\n            showPoints,\r\n            showSkeleton,\r\n            showSkeletonDegree,\r\n            keypointColor,\r\n            skeletonColor,\r\n            skeletonDegreeColor,\r\n            skeletonLineWidth\r\n        } = this.props\r\n\r\n        const posenetModel = this.posenet\r\n        //console.log(img);\r\n        const findPoseDetectionFrame = async () => {\r\n            let poses = []\r\n\r\n            switch (algorithm) {\r\n                case 'multi-pose': {\r\n                    poses = await posenetModel.estimateMultiplePoses(\r\n                        img,\r\n                        imageScaleFactor,\r\n                        flipHorizontal,\r\n                        outputStride,\r\n                        maxPoseDetections,\r\n                        minPartConfidence,\r\n                        nmsRadius\r\n                    )\r\n                    break\r\n                }\r\n                case 'single-pose': {\r\n                    const pose = await posenetModel.estimateSinglePose(\r\n                        img,\r\n                        imageScaleFactor,\r\n                        flipHorizontal,\r\n                        outputStride\r\n                    )\r\n                    //console.log(pose);\r\n                    poses.push(pose)\r\n                    break\r\n                }\r\n            }\r\n\r\n            if (showDebugImage) {\r\n                canvasContext.clearRect(0, 0, img.width, img.height)\r\n                canvasContext.save()\r\n                //canvasContext.scale(-1, 1)\r\n                //canvasContext.translate(-videoWidth, 0)\r\n                canvasContext.drawImage(img, 0, 0, img.width, img.height)\r\n                canvasContext.restore()\r\n\r\n                poses.forEach(({ score, keypoints }) => {\r\n                    if (score >= minPoseConfidence) {\r\n                        if (showSkeleton) {\r\n                            drawSkeleton(\r\n                                keypoints,\r\n                                minPartConfidence,\r\n                                skeletonColor,\r\n                                skeletonLineWidth,\r\n                                canvasContext\r\n                            )\r\n                        }\r\n\r\n                        if (showSkeletonDegree) {\r\n                            drawSkeletonDegree(\r\n                                keypoints,\r\n                                minPartConfidence,\r\n                                skeletonDegreeColor,\r\n                                canvasContext\r\n                            )\r\n                        }\r\n\r\n                        if (showPoints) {\r\n                            drawKeyPoints(\r\n                                keypoints,\r\n                                minPartConfidence,\r\n                                keypointColor,\r\n                                canvasContext\r\n                            )\r\n                        }\r\n                    }\r\n                })\r\n            }\r\n        }\r\n        findPoseDetectionFrame()\r\n    }\r\n\r\n    onImgLoadComplete() {\r\n        console.log('load complete');\r\n        this.detectPose();\r\n    }\r\n\r\n    onSelectImage(event) {\r\n        console.log('onSelectImage complete');\r\n        var reader = new FileReader();\r\n        reader.onload = function () {\r\n            var output = document.getElementById('SelectImageOutput');\r\n            output.src = reader.result;\r\n        }\r\n        reader.readAsDataURL(event.target.files[0]);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <input type=\"file\" accept=\"file_extension|audio/*|video/*|image/*|media_type\" onChange={this.onSelectImage.bind(this)} />\r\n                <img style={{width: \"100%\", height: \"100%\"}} id=\"SelectImageOutput\" onLoad={this.onImgLoadComplete.bind(this)}\r\n                    width='600' ref={this.getImage} />\r\n                <canvas ref={this.getCanvas} />\r\n                <canvas id='canvasOverlay' style={{position: 'absolute', left: '0%', right: '0%'}}  />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default PoseNetImage;\r\n//https://github.com/ml5js/ml5-examples/blob/release/p5js/PoseNet/PoseNet_image_single/data/runner.jpg?raw=true","import { Posenet_GetDegreeFormVec, Posenet_GetDegreeFormVec2 } from './PosenetMath'\r\n\r\nvar _poseData = undefined;\r\n/*\r\nvar nose = pose.keypoints[0].position;\r\nvar leftEye = pose.keypoints[1].position;\r\nvar rightEye = pose.keypoints[2].position;\r\nvar leftEar = pose.keypoints[3].position;\r\nvar rightEar = pose.keypoints[4].position;\r\nvar leftShoulder = pose.keypoints[5].position;\r\nvar rightShoulder = pose.keypoints[6].position;\r\nvar leftElbow = pose.keypoints[7].position;\r\nvar rightElbow = pose.keypoints[8].position;\r\nvar leftWrist = pose.keypoints[9].position;\r\nvar rightWrist = pose.keypoints[10].position;\r\nvar leftHip = pose.keypoints[11].position;\r\nvar rightHip = pose.keypoints[12].position;\r\nvar leftKnee = pose.keypoints[13].position;\r\nvar rightKnee = pose.keypoints[14].position;\r\nvar leftAnkle = pose.keypoints[15].position;\r\nvar rightAnkle = pose.keypoints[16].position;\r\n0: {score: 0.9984883666038513, part: \"nose\", position: {…}}\r\n1: {score: 0.9984071850776672, part: \"leftEye\", position: {…}}\r\n2: {score: 0.9996672868728638, part: \"rightEye\", position: {…}}\r\n3: {score: 0.7948698401451111, part: \"leftEar\", position: {…}}\r\n4: {score: 0.8339046835899353, part: \"rightEar\", position: {…}}\r\n5: {score: 0.9221796989440918, part: \"leftShoulder\", position: {…}}\r\n6: {score: 0.9372321367263794, part: \"rightShoulder\", position: {…}}\r\n7: {score: 0.05036594346165657, part: \"leftElbow\", position: {…}}\r\n8: {score: 0.19901293516159058, part: \"rightElbow\", position: {…}}\r\n9: {score: 0.03305239975452423, part: \"leftWrist\", position: {…}}\r\n10: {score: 0.026012789458036423, part: \"rightWrist\", position: {…}}\r\n11: {score: 0.026036551222205162, part: \"leftHip\", position: {…}}\r\n12: {score: 0.04806540533900261, part: \"rightHip\", position: {…}}\r\n13: {score: 0.013962234370410442, part: \"leftKnee\", position: {…}}\r\n14: {score: 0.024283863604068756, part: \"rightKnee\", position: {…}}\r\n15: {score: 0.009978732094168663, part: \"leftAnkle\", position: {…}}\r\n16: {score: 0.010696140117943287, part: \"rightAnkle\", position: {…}}\r\n*/\r\n\r\nexport function SetPoseData(pose) {\r\n    _poseData = pose;\r\n}\r\n\r\nexport function GetPoseData(pose) {\r\n    return _poseData;\r\n}\r\n\r\nexport function PoseCommon_InScreenPose(pose) {\r\n    if (pose.score < 0.7) {\r\n        return false;\r\n    }\r\n    return true;\r\n}\r\n\r\nexport function PoseCommon_Stand(pose) {\r\n    if (false == PoseCommon_InScreenPose(pose)) {\r\n        return false;\r\n    }\r\n\r\n    var leftAngle = PoseCommon_GetAngleFromThreeParts(pose, \"leftHip\", \"leftKnee\", \"leftAnkle\");\r\n    console.log(\"PoseCommon_Stand left angle:\" + leftAngle);\r\n    if (leftAngle > 120) {\r\n        return true;\r\n    }\r\n    // var angle = PoseCommon_GetAngle3(pose, \"leftHip\", \"leftKnee\", \"leftAnkle\");\r\n    // if (angle > 120 &&)\r\n\r\n    // var leftRatioPerHead = PoseCommon_GetLeftRatioPerHead(pose);\r\n    // var rightRatioPerHead = PoseCommon_GetRightRatioPerHead(pose);\r\n    // if (leftRatioPerHead > 7 || rightRatioPerHead > 7) {\r\n    //     return true;\r\n    // }\r\n    //console.log(\"left:\"+leftRatioPerHead + ',right:'+ rightRatioPerHead);\r\n    return false;\r\n}\r\n\r\nexport function PoseCommon_GetAngle(pose, partA, partB) {\r\n    var partAPos = PoseCommon_GetPosition(pose, partA);\r\n    var partBPos = PoseCommon_GetPosition(pose, partB);\r\n    return Posenet_GetDegreeFormVec(partBPos - partAPos);\r\n}\r\n\r\nexport function PoseCommon_GetAngleFromThreeParts(pose, partA, partB, partC) {\r\n    var partAPos = PoseCommon_GetPosition(pose, partA);\r\n    var partBPos = PoseCommon_GetPosition(pose, partB);\r\n    var partCPos = PoseCommon_GetPosition(pose, partC);\r\n    var vecA = {};\r\n    vecA.x = partBPos.x - partAPos.x;\r\n    vecA.y = partBPos.y - partAPos.y;\r\n    var vecB = {};\r\n    vecB.x = partBPos.x - partCPos.x;\r\n    vecB.y = partBPos.y - partCPos.y;\r\n    //console.log(\"vec1:\" + vecA + \", vec2:\" + vecB);\r\n    var angle = Posenet_GetDegreeFormVec2(vecA, vecB);\r\n    return angle;\r\n}\r\n\r\nexport function PoseCommon_GetXDistance(pose, partA, partB) {\r\n    var partA_x = PoseCommon_GetPosition(pose, partA).x;\r\n    var partB_x = PoseCommon_GetPosition(pose, partB).x;\r\n    return partB_x - partA_x;\r\n}\r\n\r\nexport function PoseCommon_GetYDistance(pose, partA, partB) {\r\n    var partA_y = PoseCommon_GetPosition(pose, partA).y;\r\n    var partB_y = PoseCommon_GetPosition(pose, partB).y;\r\n    return partB_y - partA_y;\r\n}\r\n\r\nexport function PoseCommon_GetPosition(pose, part) {\r\n    var index = PoseCommon_GetPartIndex(part);\r\n    if (undefined == index) {\r\n        return undefined;\r\n    }\r\n    return pose.keypoints[index].position;\r\n}\r\n\r\nexport function PoseCommon_GetPositionWithinConfidence(pose, cutScore, part) {\r\n    var index = PoseCommon_GetPartIndex(part);\r\n    if (undefined == index) {\r\n        return undefined;\r\n    }\r\n    if (pose.keypoints[index].score < cutScore) {\r\n        return undefined;\r\n    }\r\n    return pose.keypoints[index].position;\r\n}\r\n\r\nexport function PoseCommon_GetPartIndex(part) {\r\n    switch (part) {\r\n        case \"nose\": return 0;\r\n        case \"leftEye\": return 1;\r\n        case \"rightEye\": return 2;\r\n        case \"leftEar\": return 3;\r\n        case \"rightEar\": return 4;\r\n        case \"leftShoulder\": return 5;\r\n        case \"rightShoulder\": return 6;\r\n        case \"leftElbow\": return 7;\r\n        case \"rightElbow\": return 8;\r\n        case \"leftWrist\": return 9;\r\n        case \"rightWrist\": return 10;\r\n        case \"leftHip\": return 11;\r\n        case \"rightHip\": return 12;\r\n        case \"leftKnee\": return 13;\r\n        case \"rightKnee\": return 14;\r\n        case \"leftAnkle\": return 15;\r\n        case \"rightAnkle\": return 16;\r\n    }\r\n    return undefined;\r\n}\r\n\r\nexport function PoseCommon_GetLeftRatioPerHead(pose) {\r\n    var headDistance = PoseCommon_GetYDistance(pose, \"nose\", \"leftShoulder\");\r\n    var heightDistance = PoseCommon_GetYDistance(pose, \"nose\", \"leftAnkle\");\r\n    return parseInt(heightDistance/headDistance);\r\n}\r\n\r\nexport function PoseCommon_GetRightRatioPerHead(pose) {\r\n    var headDistance = PoseCommon_GetYDistance(pose, \"nose\", \"rightShoulder\");\r\n    var heightDistance = PoseCommon_GetYDistance(pose, \"nose\", \"rightAnkle\");\r\n    return parseInt(heightDistance/headDistance);\r\n}\r\n\r\nexport function PoseCommon_GetRatioY(pose, partAStart, partAEnd, partBStart, partBEnd) {\r\n    var headDistance = PoseCommon_GetYDistance(pose, partAStart, partAEnd);\r\n    var heightDistance = PoseCommon_GetYDistance(pose, partBStart, partBEnd);\r\n    return parseInt(heightDistance/headDistance);\r\n}","import React, { Component } from 'react'\r\nimport * as posenet from '@tensorflow-models/posenet'\r\nimport { drawKeyPoints, drawSkeleton, drawSkeletonDegree } from './PosenetUtils'\r\nimport { CanvasFPS_Update, CanvasFPS_Render } from './../utils/CanvasFPS'\r\nimport { PoseCommon_GetLeftRatioPerHead, PoseCommon_GetRatioY } from './data/PoseCommon'\r\n\r\nvar _stopVideo = false;\r\nclass PoseNetVideo extends Component {\r\n    static defaultProps = {\r\n        flipHorizontal: true,\r\n        algorithm: 'single-pose',\r\n        showVideo: false,\r\n        showDebugVideo: true,\r\n        showSkeleton: true,\r\n        showPoints: true,\r\n        showSkeletonDegree: true,\r\n        minPoseConfidence: 0.1,\r\n        minPartConfidence: 0.5,\r\n        maxPoseDetections: 2,\r\n        nmsRadius: 20,\r\n        outputStride: 16,\r\n        imageScaleFactor: 0.5,\r\n        skeletonColor: '#ffadea',\r\n        skeletonDegreeColor: '#ff0000',\r\n        skeletonLineWidth: 6,\r\n        loadingText: 'Loading...please be patient...'\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props, PoseNetVideo.defaultProps)\r\n    }\r\n\r\n    getCanvas = elem => {\r\n        this.canvas = elem\r\n    }\r\n\r\n    getVideo = elem => {\r\n        this.video = elem\r\n    }\r\n\r\n    async detectPose() {\r\n        const { showVideo } = this.props\r\n        const video = this.video\r\n        //video.controls = true;\r\n\r\n        var videoWidth = video.videoWidth;\r\n        var videoHeight = video.videoHeight;\r\n\r\n        video.width = videoWidth\r\n        video.height = videoHeight\r\n\r\n        //console.log(videoWidth);\r\n        if (false == showVideo) {\r\n            video.style.display = \"none\";\r\n            video.width = videoWidth\r\n            video.height = videoHeight\r\n        }\r\n\r\n        try {\r\n            this.posenet = await posenet.load()\r\n        } catch (error) {\r\n            throw new Error('PoseNetVideo failed to load')\r\n        } finally {\r\n            setTimeout(() => {\r\n                this.setState({ loading: false })\r\n            }, 200)\r\n        }\r\n\r\n        const canvas = this.canvas\r\n        const canvasContext = canvas.getContext('2d')\r\n        canvas.width = videoWidth\r\n        canvas.height = videoHeight\r\n\r\n        this.poseDetectionFrame(canvasContext)\r\n    }\r\n\r\n    poseDetectionFrame(canvasContext) {\r\n        const {\r\n            algorithm,\r\n            imageScaleFactor,\r\n            flipHorizontal,\r\n            outputStride,\r\n            minPoseConfidence,\r\n            minPartConfidence,\r\n            maxPoseDetections,\r\n            nmsRadius,\r\n            showDebugVideo,\r\n            showPoints,\r\n            showSkeleton,\r\n            showSkeletonDegree,\r\n            skeletonColor,\r\n            skeletonDegreeColor,\r\n            skeletonLineWidth\r\n        } = this.props\r\n\r\n        const posenetModel = this.posenet\r\n        const video = this.video\r\n\r\n        const findPoseDetectionFrame = async () => {\r\n\r\n            // 로딩이 되지 않았다면 리턴\r\n            if ( video.readyState != 4 ) {\r\n                console.log('video not loaded!');\r\n                return;\r\n            }\r\n\r\n            let poses = []\r\n\r\n            switch (algorithm) {\r\n                case 'multi-pose': {\r\n                    poses = await posenetModel.estimateMultiplePoses(\r\n                        video,\r\n                        imageScaleFactor,\r\n                        flipHorizontal,\r\n                        outputStride,\r\n                        maxPoseDetections,\r\n                        minPartConfidence,\r\n                        nmsRadius\r\n                    )\r\n                    break;\r\n                }\r\n                case 'single-pose': {\r\n                    const pose = await posenetModel.estimateSinglePose(\r\n                        video,\r\n                        imageScaleFactor,\r\n                        flipHorizontal,\r\n                        outputStride\r\n                    )\r\n                    //console.log(pose);\r\n                    // var left_count = PoseCommon_GetLeftRatioPerHead(pose);\r\n                    // var right_count = PoseCommon_GetRatioY(pose, \"leftHip\", \"leftKnee\", \"leftShoulder\", \"leftAnkle\");\r\n                    // console.log('left:' + left_count + ', right:' + right_count);\r\n                    poses.push(pose)\r\n                    break;\r\n                }\r\n            }\r\n\r\n            canvasContext.clearRect(0, 0, video.width, video.height)\r\n\r\n            if (showDebugVideo) {\r\n                CanvasFPS_Update();\r\n                canvasContext.save()\r\n                //canvasContext.scale(-1, 1)\r\n                //canvasContext.translate(-videoWidth, 0)\r\n                canvasContext.drawImage(video, 0, 0, video.width, video.height)\r\n                CanvasFPS_Render(canvasContext);\r\n                canvasContext.restore()\r\n\r\n                poses.forEach(({ score, keypoints }) => {\r\n                    if (score >= minPoseConfidence) {\r\n                        if (showPoints) {\r\n                            drawKeyPoints(\r\n                                keypoints,\r\n                                minPartConfidence,\r\n                                skeletonColor,\r\n                                canvasContext\r\n                            )\r\n                        }\r\n                        if (showSkeleton) {\r\n                            drawSkeleton(\r\n                                keypoints,\r\n                                minPartConfidence,\r\n                                skeletonColor,\r\n                                skeletonLineWidth,\r\n                                canvasContext\r\n                            )\r\n                        }\r\n                        if (showSkeletonDegree) {\r\n                            drawSkeletonDegree(\r\n                                keypoints,\r\n                                minPartConfidence,\r\n                                skeletonDegreeColor,\r\n                                canvasContext\r\n                            )\r\n                        }\r\n                    }\r\n                })\r\n            }\r\n            if (_stopVideo == false) {\r\n                requestAnimationFrame(findPoseDetectionFrame)\r\n            }\r\n        }\r\n        findPoseDetectionFrame()\r\n    }\r\n\r\n    onVideoLoadComplete() {\r\n        console.log('load complete');\r\n        this.detectPose();\r\n    }\r\n\r\n    onVideoClick() {\r\n        //console.log('video click');\r\n        const video = this.video\r\n        if(video.paused) {\r\n            //play.setAttribute('data-icon','u');\r\n            video.play();\r\n          } else {\r\n            //play.setAttribute('data-icon','P');\r\n            video.pause();\r\n          }\r\n    }\r\n\r\n    onSelectVideo(event) {\r\n        if (event.target.files[0] == undefined) {\r\n            return;\r\n        }\r\n\r\n        console.log('onSelectVideo complete');\r\n        _stopVideo = true;\r\n        var reader = new FileReader();\r\n        reader.onload = function () {\r\n            var output = document.getElementById('SelectVideoOutput');\r\n            output.src = reader.result;\r\n            _stopVideo = false;\r\n        }\r\n        reader.readAsDataURL(event.target.files[0]);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <input type=\"file\" accept=\"file_extension|audio/*|video/*|image/*|media_type\" onChange={this.onSelectVideo.bind(this)} />\r\n                <video id=\"SelectVideoOutput\" onLoadedData={this.onVideoLoadComplete.bind(this)} loop autoPlay ref={this.getVideo}>\r\n                    <source type=\"video/mp4\" />\r\n                    {/* <source src=\"Squats.mp4\" type=\"video/ogg\" id=\"SelectSoundOutput\" /> */}\r\n                    Your browser does not support the video tag.\r\n                </video>\r\n                <canvas onClick={this.onVideoClick.bind(this)} ref={this.getCanvas} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default PoseNetVideo;","import { PoseCommon_InScreenPose, PoseCommon_GetAngleFromThreeParts, PoseCommon_Stand, PoseCommon_GetPosition } from './PoseCommon'\r\nimport { InBoundaryDegree, Posenet_GetDegreeFormVec2 } from './PosenetMath'\r\n\r\nexport function Squats_Step1(pose) {\r\n    if (false == PoseCommon_InScreenPose(pose)) {\r\n        return false;\r\n    }\r\n\r\n    var leftPartAPos = PoseCommon_GetPosition(pose, \"leftHip\");\r\n    var leftPartBPos = PoseCommon_GetPosition(pose, \"leftKnee\");\r\n    var leftPartCPos = PoseCommon_GetPosition(pose, \"leftAnkle\");\r\n    var leftVecA = {};\r\n    leftVecA.x = leftPartBPos.x - leftPartAPos.x;\r\n    leftVecA.y = leftPartBPos.y - leftPartAPos.y;\r\n    var leftVecB = {};\r\n    leftVecB.x = leftPartBPos.x - leftPartCPos.x;\r\n    leftVecB.y = leftPartBPos.y - leftPartCPos.y;\r\n    var leftAngle = Posenet_GetDegreeFormVec2(leftVecA, leftVecB);\r\n\r\n    if (true == InBoundaryDegree(180, leftAngle, 20)) {\r\n        return true;\r\n    }\r\n\r\n    return false;\r\n}   \r\n\r\nexport function Squats_Step2(pose) {\r\n    if (false == PoseCommon_InScreenPose(pose)) {\r\n        return false;\r\n    }\r\n\r\n    var partAPos = PoseCommon_GetPosition(pose, \"leftHip\");\r\n    var partBPos = PoseCommon_GetPosition(pose, \"leftKnee\");\r\n    var partCPos = PoseCommon_GetPosition(pose, \"leftAnkle\");\r\n    var vecA = {};\r\n    vecA.x = partBPos.x - partAPos.x;\r\n    vecA.y = partBPos.y - partAPos.y;\r\n    var vecB = {};\r\n    vecB.x = partBPos.x - partCPos.x;\r\n    vecB.y = partBPos.y - partCPos.y;\r\n    //console.log(\"vec1:\" + vecA + \", vec2:\" + vecB);\r\n    var leftAngle = Posenet_GetDegreeFormVec2(vecA, vecB);\r\n\r\n    //console.log(\"Squats_Step2 angle:\" + angle);\r\n    if (true ==  InBoundaryDegree(90, leftAngle, 20)) {\r\n        return true;\r\n    }\r\n\r\n    return false;\r\n}","import React from 'react';\r\n\r\nimport { connect } from 'react-redux';\r\nimport { set_scene } from '../../actions/scene';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport PoseNetCamera from './PosenetCamera'\r\nimport PoseNetImage from './PosenetImage'\r\nimport PoseNetVideo from './PosenetVideo'\r\n//import { GetPoseData } from './data/PoseCommon'\r\nimport { Squats_Step1, Squats_Step2 } from './data/Squats'\r\nimport UIFx from 'uifx'\r\nimport mp3File from '../../two.mp3'\r\nconst beep = new UIFx({asset: mp3File});\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        '& > *': {\r\n            width: \"100%\",\r\n        },\r\n    },\r\n}));\r\n\r\nvar _poseStep = 0;\r\nvar _poseCount = 0;\r\nvar _prevPoseCount = 0;\r\nexport const PosenetPoseValid = ({ _current_scene, set_scene, _posenetPose }) => {\r\n    //console.log('Index_scene component start');\r\n    const classes = useStyles();\r\n    //const [poseCount, setPoseCount] = React.useState(0);\r\n    //const [poseStep, setposeStep] = React.useState(0);\r\n\r\n    // console.log('sound play')\r\n    // beep.play();\r\n\r\n    //console.log(_posenetPose);\r\n    if (undefined != _posenetPose) {\r\n        if (0 == _poseStep) {\r\n            if (true == Squats_Step1(_posenetPose)) {\r\n                _prevPoseCount = _poseCount;\r\n                _poseStep = 1;\r\n                console.log('sound play1:' + _poseStep)\r\n                beep.play();\r\n            }\r\n        }\r\n        else if (1 == _poseStep) {\r\n            if (true == Squats_Step2(_posenetPose)) {\r\n                _poseCount++;\r\n                _poseStep = 2;\r\n                beep.play();\r\n                console.log('sound play2:' + _poseStep)\r\n\r\n                setTimeout(function() {\r\n                    _poseStep = 0;\r\n                }.bind(this), 500)\r\n            }\r\n        }\r\n        else if (_prevPoseCount != _poseCount) {\r\n\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <h1>\r\n                step : {(0 == _poseStep) ? 'step0' : \"step1\"}\r\n                <br />\r\n                count : {_poseCount}\r\n\r\n                {/* <button onClick={onChangeScene}>scene change test</button>\r\n      <PoseNetCamera /> */}\r\n                {/* <PoseNetImage /> */}\r\n                {/* <PoseNetVideo /> */}\r\n            </h1>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    _posenetPose: state.posenet._posenetPose\r\n});\r\nconst mapDispatchToProps = { set_scene };\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PosenetPoseValid);\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport PoseNetCamera from '../components/posenet/PosenetCamera'\r\nimport PosenetPoseValid from '../components/posenet/PosenetPoseValid'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    '& > *': {\r\n      width: \"100%\",\r\n    },\r\n  },\r\n  video_root: {\r\n    flexGrow: 1,\r\n    position: 'absolute',\r\n    height: '50%',\r\n    width: '50%',\r\n    frameBorder: 0,\r\n  },\r\n  camera_root: {\r\n    //flexGrow: 1,\r\n    position: 'fixed',\r\n    left: 0,\r\n    top: 0,\r\n    // height: '100%',\r\n    // width: '100%',\r\n    //frameBorder: 0,\r\n  },\r\n}));\r\n\r\nexport const PoseNetCameraScene = ({  }) => {\r\n  console.log('Index_scene component start');\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <PosenetPoseValid />\r\n      <div>\r\n        {/* <VideoPlay className={classes.video_root}/> */}\r\n        <PoseNetCamera className={classes.camera_root}/>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default PoseNetCameraScene;","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport PoseNetImage from '../components/posenet/PosenetImage'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    '& > *': {\r\n      width: \"100%\",\r\n    },\r\n  }\r\n}));\r\n\r\nexport const PoseNetImageScene = ({  }) => {\r\n  console.log('Index_scene component start');\r\n  const classes = useStyles();\r\n  return (\r\n    <div className={classes.root}>\r\n      <PoseNetImage />\r\n    </div>\r\n  );\r\n}\r\nexport default PoseNetImageScene;","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport PoseNetVideo from '../components/posenet/PosenetVideo'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    '& > *': {\r\n      width: \"100%\",\r\n    },\r\n  }\r\n}));\r\n\r\nexport const PoseNetVideoScene = ({  }) => {\r\n  console.log('PoseNetVideoScene component start');\r\n  const classes = useStyles();\r\n  return (\r\n    <div className={classes.root}>\r\n      <PoseNetVideo />\r\n    </div>\r\n  );\r\n}\r\nexport default PoseNetVideoScene;","//var _seconds = 0;\r\n\r\nexport function StartCountdown(duration, callbackSeconds, callbackComplete ) {\r\n    console.log('SecondCountdown start:' + duration);\r\n    var timer = duration;\r\n    var _countdownTimer = setInterval(function () {\r\n        //console.log('countdown_timer:' + timer);\r\n        callbackSeconds(timer);\r\n        if (timer <= 0) {\r\n            callbackComplete();\r\n            clearInterval(_countdownTimer);\r\n        }\r\n        --timer;\r\n    }, 1000);\r\n}\r\n\r\n// import React, { useEffect } from 'react';\r\n\r\n// function SecondCountdown(props) {\r\n//     const [_seconds, setSeconds] = React.useState(props.seconds);\r\n\r\n//     useEffect(() => {\r\n//         start_countdown_timer(props.seconds);\r\n//     }, [props.seconds]);\r\n\r\n//     const render_callback = (seconds) => {\r\n//         if (undefined == props.onRender) {\r\n//             return;\r\n//         }\r\n//         return (props.onRender(seconds));\r\n//     }\r\n\r\n//     const start_countdown_timer = (duration) => {\r\n//         console.log('SecondCountdown start:' + duration);\r\n//         var timer = duration;\r\n//         var downloadTimer = setInterval(function () {\r\n//             setSeconds(timer);\r\n//             console.log('countdown_timer:' + timer);\r\n//             if (timer <= 0) {\r\n//                 props.onComplete();\r\n//                 clearInterval(downloadTimer);\r\n//             }\r\n//             --timer;\r\n//         }, 1000);\r\n//     }\r\n\r\n//     return (\r\n//         <div>\r\n//             { render_callback(_seconds) }\r\n//         </div>\r\n//     );\r\n// }\r\n\r\n// export default SecondCountdown;","export const SET_COUNTDOWN = 'SET_COUNTDOWN';\r\nexport function SetCountDown(countdown) {\r\n    return {\r\n        type: SET_COUNTDOWN,\r\n        _countdown: countdown\r\n    };\r\n}\r\n","import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { set_scene } from '../../actions/scene';\r\nimport { SetDooDoongScore } from '../../actions/score'\r\nimport slotData from './PosenetDooDoongPlaySlotData.json';\r\nimport configData from './PosenetDooDoongPlayConfigData.json'\r\nimport npcData from './PosenetDooDoongPlayNpcData.json'\r\nimport { PoseCommon_GetPosition, PoseCommon_GetPositionWithinConfidence, PoseCommon_InScreenPose } from './../posenet/data/PoseCommon'\r\n\r\nvar _countdownUpdateIntervalValue = 0;\r\nexport const PosenetDooDoongPlay = ({ _current_scene, set_scene, _doodoongScore, SetDooDoongScore, _posenetPose, _countdown }) => {\r\n    useEffect(() => {\r\n        //console.log('game countdowntime:' + _countdown);\r\n        updateNpc();\r\n        render_canvas();\r\n    }, [_posenetPose]);\r\n\r\n    const updateNpc = () => {\r\n        updateNpcDespawn();\r\n        updateNpcSpawn();\r\n\r\n        var canvas = document.getElementById(\"canvasOverlay\");\r\n        if (undefined != canvas) {\r\n            updateNpcTouch(canvas);\r\n        }\r\n    }\r\n\r\n    const updateNpcTouch = (canvas) => {\r\n        //var nose_position = PoseCommon_GetPosition(_posenetPose, \"nose\");\r\n        var part_position1 = PoseCommon_GetPositionWithinConfidence(_posenetPose, configData.MinPartConfidenceForTouch, \"nose\");\r\n        var part_position2 = PoseCommon_GetPositionWithinConfidence(_posenetPose, configData.MinPartConfidenceForTouch, \"leftWrist\");\r\n        var part_position3 = PoseCommon_GetPositionWithinConfidence(_posenetPose, configData.MinPartConfidenceForTouch, \"rightWrist\");\r\n        var part_position4 = PoseCommon_GetPositionWithinConfidence(_posenetPose, configData.MinPartConfidenceForTouch, \"leftAnkle\");\r\n        var part_position5 = PoseCommon_GetPositionWithinConfidence(_posenetPose, configData.MinPartConfidenceForTouch, \"rightAnkle\");\r\n\r\n\r\n        var checkPosList = [];\r\n        if (undefined != part_position1) { checkPosList.push(part_position1); }\r\n        if (undefined != part_position2) { checkPosList.push(part_position2); }\r\n        if (undefined != part_position3) { checkPosList.push(part_position3); }\r\n        if (undefined != part_position4) { checkPosList.push(part_position4); }\r\n        if (undefined != part_position5) { checkPosList.push(part_position5); }\r\n\r\n        //console.log('checkPosList:' + checkPosList.length);\r\n        checkPosList.map((position) => {\r\n            slotData.map((data, index) => {\r\n                if (undefined != data.npc) {\r\n                    const scale = 0.01 * canvas.width;\r\n                    const x = data.x * scale;\r\n                    const y = data.y * 0.01 * canvas.height;\r\n                    const pointRadius = data.radius * scale;\r\n\r\n                    var diffX = Math.abs(x - position.x);\r\n                    var diffY = Math.abs(y - position.y);\r\n                    if (diffY > pointRadius || diffX > pointRadius) {\r\n                        return;\r\n                    }\r\n\r\n                    var distance = Math.sqrt(diffX * diffX + diffY * diffY);\r\n                    if (distance > pointRadius) {\r\n                        return;\r\n                    }\r\n\r\n                    const sound = document.getElementById(\"hitSound\");\r\n                    if (undefined != sound) {\r\n                        sound.play();\r\n                    }\r\n\r\n                    console.log('touch slot : ' + index);\r\n                    data.npc = undefined;\r\n                    SetDooDoongScore(_doodoongScore + 1);\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    const updateNpcDespawn = () => {\r\n        slotData.map((data, index) => {\r\n            if (undefined != data.npc) {\r\n                var targetNpcData = npcData[data.npc.id];\r\n                var npcLifeTime = targetNpcData.lifeTime;\r\n                var duration = Date.now() - data.npc.spawnTime;\r\n                // 삭제 처리\r\n                if (duration >= npcLifeTime) {\r\n                    data.npc = undefined;\r\n                    console.log('despawn slot : ' + index);\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    const updateNpcSpawn = () => {\r\n        // 1초마다 한번 체크\r\n        if (_countdownUpdateIntervalValue == _countdown) {\r\n            return;\r\n        }\r\n        _countdownUpdateIntervalValue = _countdown;\r\n\r\n        var spawnIndex = Math.floor(Math.random() * Math.floor(slotData.length));\r\n        if (undefined != slotData[spawnIndex].npc) {\r\n            console.log('already npc spawn!')\r\n            return;\r\n        }\r\n\r\n        var npcIndex = Math.floor(Math.random() * Math.floor(npcData.length));\r\n        console.log(\"npc spawn slot index:\" + spawnIndex + \", npc index:\" + npcIndex);\r\n        var newNpc = {};\r\n        newNpc.spawnTime = Date.now();\r\n        newNpc.id = npcIndex;\r\n        slotData[spawnIndex].npc = newNpc;\r\n    }\r\n\r\n    const render_timer = (canvas, canvasContext) => {\r\n        if (undefined == canvas || undefined == canvasContext) {\r\n            return;\r\n        }\r\n        var fontSize = canvas.width/10;\r\n        canvasContext.fillStyle = 'white';\r\n        canvasContext.shadowColor = 'rgba(0,0,0,1)';\r\n        canvasContext.shadowBlur = 2;\r\n        canvasContext.shadowOffsetX = 3;\r\n        canvasContext.shadowOffsetY = 3;\r\n        canvasContext.font = fontSize + \"px Arial\";\r\n        canvasContext.textAlign = \"center\";\r\n        canvasContext.fillText(_countdown + '초', canvas.width/2, fontSize);\r\n    }\r\n\r\n    const render_score = (canvas, canvasContext) => {\r\n        if (undefined == canvas || undefined == canvasContext) {\r\n            return;\r\n        }\r\n        var fontSize = canvas.width/10;\r\n        canvasContext.fillStyle = 'white';\r\n        canvasContext.shadowColor = 'rgba(0,0,0,1)';\r\n        canvasContext.shadowBlur = 2;\r\n        canvasContext.shadowOffsetX = 3;\r\n        canvasContext.shadowOffsetY = 3;\r\n        canvasContext.font = fontSize + \"px Arial\";\r\n        canvasContext.textAlign = \"center\";\r\n        canvasContext.fillText(_doodoongScore, canvas.width/2, canvas.height/2);\r\n    }\r\n\r\n    const render_camera_distance = (canvas, canvasContext) => {\r\n        if (undefined == canvas || undefined == canvasContext) {\r\n            return;\r\n        }\r\n\r\n        if (PoseCommon_InScreenPose(_posenetPose) == false) {\r\n            var fontSize = canvas.width / 10;\r\n            canvasContext.fillStyle = 'white';\r\n            canvasContext.shadowColor = 'rgba(0,0,0,1)';\r\n            canvasContext.shadowBlur = 2;\r\n            canvasContext.shadowOffsetX = 3;\r\n            canvasContext.shadowOffsetY = 3;\r\n            canvasContext.font = fontSize + \"px Arial\";\r\n            canvasContext.textAlign = \"center\";\r\n            canvasContext.fillText('적절한 거리 유지', canvas.width / 2, canvas.height / 2 + fontSize);\r\n        }\r\n    }\r\n\r\n    const render_npc = (x, y, radius, scale, npc, canvas, canvasContext) => {\r\n        if (undefined == canvas || undefined == canvasContext) {\r\n            return;\r\n        }\r\n        if (undefined == npc) {\r\n            return;\r\n        }\r\n        var targetNpcData = npcData[npc.id];\r\n        var duration = Date.now() - npc.spawnTime;\r\n        var npcLifeTime = targetNpcData.lifeTime;\r\n\r\n        duration = Math.min(duration, npcLifeTime);\r\n\r\n        const renderScale = 1.0-(duration/npcLifeTime);\r\n        const renderRadius = radius*renderScale;\r\n        canvasContext.globalAlpha = 1.0;\r\n\r\n        const image = document.getElementById(targetNpcData.img);\r\n        if (undefined != image) {\r\n            canvasContext.drawImage(image, x-renderRadius, y-renderRadius, renderRadius*2, renderRadius*2);\r\n        }\r\n        else {\r\n            canvasContext.beginPath()\r\n            canvasContext.arc(x, y, renderRadius, 0, 2 * Math.PI);\r\n            canvasContext.fillStyle = \"red\";\r\n            canvasContext.fill();\r\n        }\r\n    }\r\n\r\n    const render_slot = (canvas, canvasContext) => {\r\n        if (undefined == canvas || undefined == canvasContext) {\r\n            return;\r\n        }\r\n        //console.log('data count:' + slotData.length);\r\n        slotData.map((data, index) => {\r\n            const scale = 0.01 * canvas.width;\r\n            const x = data.x * scale;\r\n            const y = data.y * 0.01 * canvas.height;\r\n            const pointRadius = data.radius * scale;\r\n            canvasContext.beginPath()\r\n            canvasContext.globalAlpha = 0.4;\r\n            canvasContext.setLineDash([4, 2]);\r\n            canvasContext.lineDashOffset = (Date.now() / 200) % 18;\r\n            canvasContext.arc(x, y, pointRadius, 0, 2 * Math.PI);\r\n            canvasContext.strokeStyle = 'red';\r\n            canvasContext.lineWidth = 2;\r\n            canvasContext.stroke();\r\n            //canvasContext.fillText(index, x, y);\r\n            render_npc(x, y, pointRadius, scale, data.npc, canvas, canvasContext);\r\n        });\r\n    }\r\n    \r\n    const render_canvas = () => {\r\n        if (undefined == _posenetPose) {\r\n            return;\r\n        }\r\n        var canvas = document.getElementById(\"canvasOverlay\");\r\n        if (undefined != canvas) {\r\n            const canvasContext = canvas.getContext('2d')\r\n            if (undefined != canvasContext) {\r\n                canvasContext.clearRect(0, 0, canvas.width, canvas.height);\r\n                canvasContext.save();\r\n                canvasContext.scale(-1, 1)\r\n                canvasContext.translate(-canvas.width, 0)\r\n                render_slot(canvas, canvasContext);\r\n                canvasContext.restore()\r\n\r\n                render_timer(canvas, canvasContext);\r\n                render_score(canvas, canvasContext);\r\n                render_camera_distance(canvas, canvasContext);\r\n                //canvasContext.globalAlpha = 1.0;\r\n            }\r\n        }\r\n    }\r\n    return (\r\n        <div>\r\n            <img id=\"npc1\" src=\"npc1.jpg\" style={{display:'none'}}></img>\r\n            <img id=\"npc2\" src=\"npc2.jpg\" style={{display:'none'}}></img>\r\n            <img id=\"npc3\" src=\"npc3.jpg\" style={{display:'none'}}></img>\r\n            <audio id=\"hitSound\" preload=\"auto\" src=\"two.mp3\" style={{display:'none'}} />\r\n        </div>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    _posenetPose: state.posenet._posenetPose,\r\n    _countdown: state.countdown._countdown,\r\n    _doodoongScore: state.score._doodoongScore\r\n});\r\nconst mapDispatchToProps = { set_scene, SetDooDoongScore };\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PosenetDooDoongPlay);\r\n","export const SET_DOODOONG_SCORE = 'SET_DOODOONG_SCORE';\r\nexport function SetDooDoongScore(score) {\r\n    return {\r\n        type: SET_DOODOONG_SCORE,\r\n        _doodoongScore: score\r\n    };\r\n}\r\n\r\nexport const SET_FROGJUMP_SCORE = 'SET_FROGJUMP_SCORE';\r\nexport function SetFrogJumpScore(score) {\r\n    return {\r\n        type: SET_FROGJUMP_SCORE,\r\n        _frogJumpScore: score\r\n    };\r\n}\r\n\r\n\r\nexport const SET_TOWER_SCORE = 'SET_TOWER_SCORE';\r\nexport function SetTowerScore(score) {\r\n    return {\r\n        type: SET_TOWER_SCORE,\r\n        _towerScore: score\r\n    };\r\n}\r\n","import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { set_scene } from '../../actions/scene';\r\n\r\nexport const PosenetPoseScan = ({ set_scene, _posenetPose, _countdown }) => {\r\n    useEffect(() => {\r\n        //console.log('game countdowntime:' + _countdown);\r\n        render_Canvas();\r\n    });\r\n    \r\n    const render_scan = (canvas, canvasContext) => {\r\n        if (undefined == canvas || undefined == canvasContext) {\r\n            return;\r\n        }\r\n\r\n        var fontSize = canvas.width/10;\r\n        canvasContext.fillStyle = 'white';\r\n        canvasContext.shadowColor = 'rgba(0,0,0,1)';\r\n        canvasContext.shadowBlur = 2;\r\n        canvasContext.shadowOffsetX = 3;\r\n        canvasContext.shadowOffsetY = 3;\r\n        canvasContext.font = fontSize + \"px Arial\";\r\n        canvasContext.textAlign = \"center\";\r\n\r\n        if (undefined == _posenetPose) {\r\n            canvasContext.fillText('로딩 중', canvas.width/2, fontSize);\r\n        }\r\n        else {\r\n            const percent = parseInt(_posenetPose.score * 100);\r\n            canvasContext.fillText('인식 중' + percent, canvas.width/2, fontSize);\r\n        }\r\n    }\r\n    \r\n    const render_Canvas = () => {\r\n        var canvas = document.getElementById(\"canvasOverlay\");\r\n        if (undefined != canvas) {\r\n            const canvasContext = canvas.getContext('2d')\r\n            if (undefined != canvasContext) {\r\n                canvasContext.clearRect(0, 0, canvas.width, canvas.height);\r\n                canvasContext.save();\r\n                render_scan(canvas, canvasContext);\r\n                canvasContext.restore()\r\n            }\r\n        }\r\n    }\r\n    return (<div></div>);\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    _posenetPose: state.posenet._posenetPose,\r\n    _countdown: state.countdown._countdown\r\n});\r\nconst mapDispatchToProps = { set_scene };\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PosenetPoseScan);\r\n","import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { set_scene } from '../../actions/scene';\r\n\r\nexport const PosenetGameReadyCountdown = ({ set_scene, _posenetPose, _countdown }) => {\r\n    useEffect(() => {\r\n        //console.log('game countdowntime:' + _countdown);\r\n        render_Canvas();\r\n    });\r\n\r\n    const render_timer = (canvas, canvasContext) => {\r\n        if (undefined == canvas || undefined == canvasContext) {\r\n            return;\r\n        }\r\n        var fontSize = canvas.width/10;\r\n        canvasContext.fillStyle = 'white';\r\n        canvasContext.shadowColor = 'rgba(0,0,0,1)';\r\n        canvasContext.shadowBlur = 2;\r\n        canvasContext.shadowOffsetX = 3;\r\n        canvasContext.shadowOffsetY = 3;\r\n        canvasContext.font = fontSize + \"px Arial\";\r\n        canvasContext.textAlign = \"center\";\r\n        canvasContext.fillText(_countdown + '초', canvas.width/2, fontSize);\r\n    }\r\n    \r\n    const render_Canvas = () => {\r\n        if (undefined == _posenetPose) {\r\n            return;\r\n        }\r\n        var canvas = document.getElementById(\"canvasOverlay\");\r\n        if (undefined != canvas) {\r\n            const canvasContext = canvas.getContext('2d')\r\n            if (undefined != canvasContext) {\r\n                canvasContext.clearRect(0, 0, canvas.width, canvas.height);\r\n                canvasContext.save();\r\n                render_timer(canvas, canvasContext);\r\n                canvasContext.restore()\r\n                //canvasContext.globalAlpha = 1.0;\r\n            }\r\n        }\r\n    }\r\n    return (<div></div>);\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    _posenetPose: state.posenet._posenetPose,\r\n    _countdown: state.countdown._countdown\r\n});\r\nconst mapDispatchToProps = { set_scene };\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PosenetGameReadyCountdown);\r\n","import React, { useRef } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport {StartCountdown} from './../components/utils/SecondCountdown'\r\n\r\nimport { set_scene } from '../actions/scene';\r\nimport { SetCountDown } from '../actions/countdown';\r\nimport { ClosePosenet } from '../actions/posenet'\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport PoseNetCamera from '../components/posenet/PosenetCamera'\r\nimport PosenetDooDoongPlay from '../components/PoseNetGame/PosenetDooDoongPlay'\r\nimport PosenetPoseScan from '../components/PoseNetGame/PosenetPoseScan'\r\nimport PosenetGameReadyCountdown from '../components/PoseNetGame/PosenetGameReadyCountdown'\r\n\r\nimport configData from './../components/PoseNetGame/PosenetDooDoongPlayConfigData.json'\r\n\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\r\nimport SkipNextIcon from '@material-ui/icons/SkipNext';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n    maxHeight: '100%',\r\n  },\r\n  wrapper: {\r\n    display: 'table',\r\n    width: 'auto',\r\n    position: 'relative',\r\n    width: '100%',\r\n  },\r\n\r\n  video: {\r\n    width: '100%',\r\n    border: '1px solid black',\r\n  },\r\n\r\n  countdown_renderer: {\r\n    width: '100%',\r\n    zIndex: '1',\r\n  },\r\n\r\n  playButton: {\r\n    // backgroundImage: 'url(http://png-4.findicons.com/files/icons/2315/default_icon/256/media_play_pause_resume.png)',\r\n    // backgroundRepeat: 'no-repeat',\r\n    width: '50%',\r\n    height: '50%',\r\n    position: 'absolute',\r\n    left: '0%',\r\n    right: '0%',\r\n    top: '0%',\r\n    bottom: '0%',\r\n    margin: 'auto',\r\n    display: 'none',\r\n  },\r\n  skipButton: {\r\n    // backgroundImage: 'url(http://png-4.findicons.com/files/icons/2315/default_icon/256/media_play_pause_resume.png)',\r\n    // backgroundRepeat: 'no-repeat',\r\n    width: '50%',\r\n    height: '50%',\r\n    position: 'absolute',\r\n    left: '0%',\r\n    right: '0%',\r\n    top: '50%',\r\n    bottom: '0%',\r\n    margin: 'auto',\r\n    display: 'none',\r\n  },\r\n  largeIcon: {\r\n    fontSize: \"5em\"\r\n  }\r\n}));\r\n\r\nvar SCENE_TYPE = {\r\n  READY: 0,\r\n  SCAN: 1,\r\n  COUNTDOWN: 2,\r\n  GAMEPLAY: 3,\r\n  GAMESTOP: 4,\r\n  GAMERESULT: 5\r\n};\r\nvar _sceneType = SCENE_TYPE.READY;\r\n\r\nexport const GameDooDoongScene = ({ _posenetPose, _closePosenet, set_scene, SetCountDown, ClosePosenet }) => {\r\n  //console.log('GameDooDoongScene component start');\r\n  const classes = useStyles();\r\n  const [_step, setStep] = React.useState(SCENE_TYPE.READY);\r\n  \r\n\r\n  const getStep = () => {\r\n    let contents = [];\r\n    switch (_step) {\r\n      case SCENE_TYPE.READY: {\r\n        contents.push(getHowToPlayContent());\r\n      } break;\r\n      case SCENE_TYPE.SCAN: {\r\n        getGameCountdownSceneCheck_Logic();\r\n        contents.push(getPoseNetCamera());\r\n      } break;\r\n      case SCENE_TYPE.COUNTDOWN: {\r\n        contents.push(getPoseNetCamera());\r\n      } break;\r\n      case SCENE_TYPE.GAMEPLAY:{\r\n        contents.push(getPoseNetCamera());\r\n      } break;\r\n      case SCENE_TYPE.GAMESTOP: {\r\n        getGameStopSceneCheck_Logic();\r\n        contents.push(getPoseNetCamera());\r\n      } break;\r\n      case SCENE_TYPE.GAMERESULT: {\r\n        contents.push(getGameResult());\r\n      } break;\r\n    }\r\n    return contents;\r\n  }\r\n\r\n  function changeSceneType(change){\r\n    var preScene = _sceneType;\r\n    var nextScene = change;\r\n    setStep(nextScene);\r\n    _sceneType = change;\r\n    console.log('change scene tpye:' + preScene + '=>' + nextScene);\r\n\r\n    switch (nextScene) {\r\n      case SCENE_TYPE.COUNTDOWN:{\r\n        ClosePosenet('');\r\n        StartCountdown(configData.ReadyCountdown, updateCountdownSeconds, countdown_complete);\r\n      } break;\r\n      case SCENE_TYPE.GAMEPLAY:{\r\n        ClosePosenet('');\r\n        StartCountdown(configData.PlayCountdown, updateCountdownSeconds, countdown_complete);\r\n      } break;\r\n      case SCENE_TYPE.GAMESTOP:{\r\n        ClosePosenet('start');\r\n      } break;\r\n    }\r\n  }\r\n\r\n  const updateCountdownSeconds = (seconds) => {\r\n    SetCountDown(seconds);\r\n  }\r\n\r\n  const getHowToPlayContent = () => {\r\n    return (\r\n      <div key=\"HowToPlay\" className={classes.wrapper}>\r\n        <video id='video' className={classes.video} onClick={onVideoClick} loop autoPlay>\r\n          <source type=\"video/mp4\" />\r\n          <source src=\"FingertipToToeJacks.mp4\" type=\"video/ogg\" id=\"SelectSoundOutput\" />\r\n                Your browser does not support the video tag.\r\n        </video>\r\n        <div id='playButton' className={classes.playButton}>\r\n          <IconButton aria-label=\"play\" onClick={onPlayClick} >\r\n            <PlayArrowIcon className={classes.largeIcon} />\r\n          </IconButton>\r\n        </div>\r\n        <div id='skipButton' className={classes.skipButton}>\r\n          <IconButton aria-label=\"skip\" onClick={onSkipClick}>\r\n            <SkipNextIcon className={classes.largeIcon} />\r\n          </IconButton>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  \r\n  const getPoseNetCamera = () => {\r\n    return (\r\n      <div key=\"PoseNetCamera\">\r\n        <PoseNetCamera showVideo={true} showDebugVideo={true} minPoseConfidence='0.1' />\r\n        {(_step == SCENE_TYPE.GAMEPLAY) ? \r\n        (<PosenetDooDoongPlay />) : undefined}\r\n        {(_step == SCENE_TYPE.SCAN) ? \r\n        (<PosenetPoseScan />) : undefined}\r\n        {(_step == SCENE_TYPE.COUNTDOWN) ? \r\n        (<PosenetGameReadyCountdown />) : undefined}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  const getGameCountdownSceneCheck_Logic = () => {\r\n    if (undefined == _posenetPose) {\r\n      return undefined;\r\n    }\r\n\r\n    if (_posenetPose.score >= configData.PoseMinConfidenceForGameReady) {\r\n      changeSceneType(SCENE_TYPE.COUNTDOWN);\r\n    }\r\n  }\r\n\r\n  const getGameStopSceneCheck_Logic = () => {\r\n    console.log('GameStop check:' + _closePosenet)\r\n    if (_closePosenet == 'complete') {\r\n      changeSceneType(SCENE_TYPE.GAMERESULT);\r\n      ClosePosenet('');\r\n    }\r\n  }\r\n\r\n  const countdown_complete = () => {\r\n    console.log('countdown_complete:' + _sceneType);\r\n    if (_sceneType == SCENE_TYPE.COUNTDOWN) {\r\n      changeSceneType(SCENE_TYPE.GAMEPLAY);\r\n    }\r\n    else if (_sceneType == SCENE_TYPE.GAMEPLAY) {\r\n      changeSceneType(SCENE_TYPE.GAMESTOP);\r\n    }\r\n  }\r\n\r\n  const getGameResult = () => {\r\n    return (\r\n      <div key=\"GameResult\">\r\n        성공\r\n      </div>\r\n    );\r\n  }\r\n\r\n  const onVideoClick = () => {\r\n    //console.log('video click');\r\n    const video = document.getElementById('video');\r\n    const playButton = document.getElementById('playButton');\r\n    const skipButton = document.getElementById('skipButton');\r\n    if (video.paused) {\r\n      video.play();\r\n      playButton.style.display = \"none\";\r\n      skipButton.style.display = \"none\";\r\n    } else {\r\n      video.pause();\r\n      playButton.style.display = \"block\";\r\n      skipButton.style.display = \"block\";\r\n    }\r\n  }\r\n\r\n  const onPlayClick = () => {\r\n    const video = document.getElementById('video');\r\n    const playButton = document.getElementById('playButton');\r\n    const skipButton = document.getElementById('skipButton');\r\n    video.play();\r\n    playButton.style.display = \"none\";\r\n    skipButton.style.display = \"none\";\r\n  }\r\n\r\n  const onSkipClick = () => {\r\n    changeSceneType(SCENE_TYPE.SCAN);\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      {getStep()}\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  _posenetPose: state.posenet._posenetPose,\r\n  _closePosenet: state.posenet._closePosenet\r\n});\r\nconst mapDispatchToProps = { set_scene, SetCountDown, ClosePosenet };\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(GameDooDoongScene);\r\n","import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { SetSubScene } from '../../actions/scene';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Squats_Step1, Squats_Step2} from './../posenet/data/Squats'\r\nimport { PoseCommon_GetPosition, PoseCommon_GetPositionWithinConfidence, PoseCommon_InScreenPose } from './../posenet/data/PoseCommon'\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    wrapper: {\r\n      display: 'table',\r\n      width: 'auto',\r\n      position: 'relative',\r\n      width: '100%',\r\n      zIndex: '-3',\r\n    },\r\n    video: {\r\n      width: '100%',\r\n      border: '1px solid black',\r\n      zIndex: '-3',\r\n    }\r\n  }));\r\n\r\n  var _step = 0;\r\nexport const PosenetFrogJumpTutorial = ({ _current_scene, SetSubScene, _posenetPose }) => {\r\n    const classes = useStyles();\r\n\r\n    useEffect(() => {\r\n        //console.log('game countdowntime:' + _countdown);\r\n        control_video();\r\n        render_canvas();\r\n    }, [_posenetPose]);\r\n\r\n    const control_video = () => {\r\n        var video = document.getElementById('video');\r\n        if (undefined == video) {\r\n            return;\r\n        }\r\n\r\n        switch (_step) {\r\n            case 0: {\r\n                if (video.paused) {\r\n                    if (true == Squats_Step2(_posenetPose)) {\r\n                        _step = 1;\r\n                        console.log(\"PosenetFrogJumpTutorial step:\" + _step);\r\n                        video.play();\r\n                    }\r\n                }\r\n                else if (video.currentTime >= 2.8) {\r\n                    video.pause();\r\n                    //SetSubScene('next');\r\n                }\r\n            } break;\r\n            case 1: {\r\n                if (video.paused) {\r\n                    if (true == Squats_Step1(_posenetPose)) {\r\n                        _step = 2;\r\n                        console.log(\"PosenetFrogJumpTutorial step:\" + _step);\r\n                        video.play();\r\n                    }\r\n                }\r\n                else if (video.currentTime >= 4) {\r\n                    video.pause();\r\n                }\r\n            } break;\r\n            case 2: {\r\n                if (video.paused) {\r\n                    if (true == Squats_Step2(_posenetPose)) {\r\n                        _step = 3;\r\n                        console.log(\"PosenetFrogJumpTutorial step:\" + _step);\r\n                        video.play();\r\n                    }\r\n                }\r\n                else if (video.currentTime >= 7.0) {\r\n                    video.pause();\r\n                }\r\n            } break;\r\n            case 3: {\r\n                if (video.paused) {\r\n                    if (true == Squats_Step1(_posenetPose)) {\r\n                        SetSubScene('next');\r\n                    }\r\n                }\r\n                else if (video.currentTime >= 10) {\r\n                    video.pause();\r\n                }\r\n            } break;\r\n        }\r\n        //console.log(video.currentTime);\r\n    }\r\n\r\n    const render_title = (canvas, canvasContext) => {\r\n        if (undefined == canvas || undefined == canvasContext) {\r\n            return;\r\n        }\r\n        var fontSize = canvas.width/10;\r\n        canvasContext.fillStyle = 'white';\r\n        canvasContext.shadowColor = 'rgba(0,0,0,1)';\r\n        canvasContext.shadowBlur = 2;\r\n        canvasContext.shadowOffsetX = 3;\r\n        canvasContext.shadowOffsetY = 3;\r\n        canvasContext.font = fontSize + \"px Arial\";\r\n        canvasContext.textAlign = \"center\";\r\n        canvasContext.fillText('따라해 보세요', canvas.width/2, fontSize);\r\n    }\r\n\r\n    const render_camera_distance = (canvas, canvasContext) => {\r\n        if (undefined == canvas || undefined == canvasContext) {\r\n            return;\r\n        }\r\n\r\n        if (PoseCommon_InScreenPose(_posenetPose) == false) {\r\n            var fontSize = canvas.width / 10;\r\n            canvasContext.fillStyle = 'white';\r\n            canvasContext.shadowColor = 'rgba(0,0,0,1)';\r\n            canvasContext.shadowBlur = 2;\r\n            canvasContext.shadowOffsetX = 3;\r\n            canvasContext.shadowOffsetY = 3;\r\n            canvasContext.font = fontSize + \"px Arial\";\r\n            canvasContext.textAlign = \"center\";\r\n            canvasContext.fillText('적절한 거리 유지', canvas.width / 2, canvas.height / 2 + fontSize);\r\n        }\r\n    }\r\n    \r\n    const render_canvas = () => {\r\n        if (undefined == _posenetPose) {\r\n            return;\r\n        }\r\n        var canvas = document.getElementById(\"canvasOverlay\");\r\n        if (undefined != canvas) {\r\n            const canvasContext = canvas.getContext('2d')\r\n            if (undefined != canvasContext) {\r\n                canvasContext.clearRect(0, 0, canvas.width, canvas.height);\r\n                render_title(canvas, canvasContext);\r\n                render_camera_distance(canvas, canvasContext);\r\n                //canvasContext.globalAlpha = 1.0;\r\n            }\r\n        }\r\n    }\r\n    return (\r\n        <div key=\"HowToPlay\" className={classes.wrapper}>\r\n            <video id='video' className={classes.video} loop autoPlay>\r\n                <source type=\"video/mp4\" />\r\n                <source src=\"Squats.mp4\" type=\"video/ogg\" id=\"SelectSoundOutput\" />\r\n                Your browser does not support the video tag.\r\n            </video>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    _posenetPose: state.posenet._posenetPose\r\n});\r\nconst mapDispatchToProps = { SetSubScene };\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PosenetFrogJumpTutorial);\r\n","import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { set_scene, SetSubScene } from '../../actions/scene';\r\nimport { SetFrogJumpScore } from '../../actions/score'\r\nimport { PoseCommon_InScreenPose } from './../posenet/data/PoseCommon'\r\nimport { Squats_Step1, Squats_Step2 } from './../posenet/data/Squats'\r\nimport configData from './PosenetFrogJumpPlayConfigData.json'\r\n\r\nvar _poseStep = 1;\r\nvar _frogMoveDistance = 0;\r\nvar _scoreToDistance = 10;\r\nvar _prevUpdateTime = 0;\r\nvar _markingPerPixel = 30;\r\n\r\nvar _catMoveDistance = -10;\r\n\r\nvar _elapsedTimeDelta = 0.005;\r\nvar _gameFinished = false;\r\n\r\nexport const PosenetFrogJumpPlay = ({ _current_scene, set_scene, SetSubScene, _frogJumpScore, SetFrogJumpScore, _posenetPose, _countdown }) => {\r\n    useEffect(() => {\r\n        //console.log('game countdowntime:' + _countdown);\r\n        update();\r\n        render_canvas();\r\n    }, [_posenetPose]);\r\n\r\n    const update_count = () => {\r\n        if (undefined == _posenetPose) {\r\n            return;\r\n        }\r\n        if (_gameFinished == true) {\r\n            return;\r\n        }\r\n\r\n        if (0 == _poseStep) {\r\n            if (true == Squats_Step1(_posenetPose)) {\r\n                _poseStep = 1;\r\n                console.log('squart step 1');\r\n                SetFrogJumpScore(_frogJumpScore+1);\r\n            }\r\n        }\r\n        else if (1 == _poseStep) {\r\n            if (true == Squats_Step2(_posenetPose)) {\r\n                _poseStep = 0;\r\n                console.log('squart step 2');\r\n            }\r\n        }\r\n    }\r\n\r\n    const updateCheckGameFisnish = () => {\r\n        if (_gameFinished == true) {\r\n            return;\r\n        }\r\n\r\n        if (_catMoveDistance >= _frogMoveDistance) {\r\n            _gameFinished = true;\r\n            SetSubScene('next');\r\n            console.log('game finished:' + _catMoveDistance + '/' + _frogMoveDistance);\r\n        }\r\n    }\r\n\r\n    const updatCatMove = (elapsedTime) => {\r\n        if (_gameFinished == true) {\r\n            return;\r\n        }\r\n        _catMoveDistance += elapsedTime*_elapsedTimeDelta*configData.CatMoveSpeed;\r\n        if (_catMoveDistance > _frogMoveDistance) {\r\n            _catMoveDistance = _frogMoveDistance;\r\n        }\r\n        //console.log('cat y:' + _catMoveDistance);\r\n    }\r\n\r\n    const updateFrogMove = (elapsedTime) => {\r\n        if (_gameFinished == true) {\r\n            return;\r\n        }\r\n\r\n        var targetDistance = _frogJumpScore * _scoreToDistance;\r\n        var addDistance = elapsedTime*_elapsedTimeDelta*configData.FrogMoveSpeed;\r\n        _frogMoveDistance += addDistance;\r\n        if (_frogMoveDistance >= targetDistance) {\r\n            _frogMoveDistance = targetDistance;\r\n        }\r\n    }\r\n\r\n    const update = () => {\r\n        var elapsedTime = Date.now() - _prevUpdateTime;\r\n        if (_prevUpdateTime == 0) {\r\n            elapsedTime = 0;\r\n        }\r\n        _prevUpdateTime = Date.now();\r\n        updatCatMove(elapsedTime);\r\n        updateFrogMove(elapsedTime);\r\n        updateCheckGameFisnish();\r\n        update_count();\r\n    }\r\n\r\n    const render_tapeline = (canvas, canvasContext) => {\r\n        var fontSize = canvas.width/40;\r\n        var rectWidth = canvas.width/10;\r\n        var startX = canvas.width - rectWidth;\r\n\r\n        canvasContext.fillStyle = \"#aaaaaa\";\r\n        canvasContext.fillRect(startX, 0, rectWidth, canvas.height);\r\n\r\n        var gridCount = parseInt(canvas.height/_markingPerPixel)+2;\r\n\r\n        canvasContext.shadowBlur = 0;\r\n        canvasContext.shadowOffsetX = 0;\r\n        canvasContext.shadowOffsetY = 0;\r\n        canvasContext.strokeStyle = \"#ffffff\";\r\n        canvasContext.fillStyle = \"#ffffff\";\r\n\r\n        var startDistance = _frogMoveDistance - configData.TapelineCutlineForShift;\r\n        if (startDistance < 0) {\r\n            startDistance = 0;\r\n        }\r\n        var leftDecimal = parseInt(startDistance);\r\n        var rightDecimal = startDistance - leftDecimal;\r\n\r\n        canvasContext.beginPath();\r\n        for (var i = 0; i < gridCount; i++) {\r\n            var currentDistance = i + leftDecimal;\r\n            var currentY = canvas.height - parseInt((i - rightDecimal) * _markingPerPixel);\r\n            \r\n            canvasContext.moveTo(startX, currentY);\r\n            canvasContext.lineTo(startX + rectWidth/2, currentY);\r\n\r\n            var currentDistance = currentDistance;\r\n            if (currentDistance % 5 == 0) {\r\n                canvasContext.font = fontSize + \"px Arial\";\r\n                canvasContext.textAlign = \"center\";\r\n                canvasContext.fillText(currentDistance + 'm', startX + rectWidth / 2, currentY + fontSize);\r\n            }\r\n        }\r\n        canvasContext.stroke();\r\n    }\r\n\r\n    const render_frog = (canvas, canvasContext) => {\r\n        const image = document.getElementById('frog');\r\n        if (undefined == image) {\r\n            return;\r\n        }\r\n        // _frogJumpScore\r\n        var frogSize = canvas.width/20;\r\n        var x = canvas.width - frogSize;\r\n        var y = canvas.height - Math.min(_frogMoveDistance, configData.TapelineCutlineForShift) * _markingPerPixel;\r\n        //console.log('y:' + y);\r\n\r\n        // 개구리 크기의 5배를 높이 뛰기\r\n        var ratio = (_frogMoveDistance%_scoreToDistance)/_scoreToDistance;\r\n        var jumpHeight = parseInt(Math.sin(ratio*Math.PI)* frogSize * 5);\r\n        //console.log('ratio:' + ratio + ',jumpHeight:' + jumpHeight);\r\n        canvasContext.drawImage(image, x-frogSize-frogSize*2 - jumpHeight, y-frogSize*2, frogSize*2, frogSize*2);\r\n    }\r\n\r\n    const render_cat = (canvas, canvasContext) => {\r\n        const image = document.getElementById('cat');\r\n        if (undefined == image) {\r\n            return;\r\n        }\r\n        if (_catMoveDistance <= 0) {\r\n            return;\r\n        }\r\n\r\n        var catSize = canvas.width/20;\r\n        var x = canvas.width - catSize;\r\n\r\n        var frogY = canvas.height - Math.min(_frogMoveDistance, configData.TapelineCutlineForShift) * _markingPerPixel;\r\n        var diffDistance = (_frogMoveDistance - _catMoveDistance)  * _markingPerPixel;\r\n        var y = frogY + diffDistance;\r\n        \r\n        //y -= Math.min(_catMoveDistance, configData.TapelineCutlineForShift) * _markingPerPixel;\r\n\r\n        canvasContext.drawImage(image, x-catSize-catSize*2, y-catSize*2, catSize*2, catSize*2);\r\n    }\r\n\r\n    const render_finish = (canvas, canvasContext) => {\r\n        if (undefined == canvas || undefined == canvasContext) {\r\n            return;\r\n        }\r\n\r\n        if (_gameFinished == false) {\r\n            return;\r\n        }\r\n\r\n        var fontSize = canvas.width/10;\r\n        canvasContext.fillStyle = 'white';\r\n        canvasContext.shadowColor = 'rgba(0,0,0,1)';\r\n        canvasContext.shadowBlur = 2;\r\n        canvasContext.shadowOffsetX = 3;\r\n        canvasContext.shadowOffsetY = 3;\r\n        canvasContext.font = fontSize + \"px Arial\";\r\n        canvasContext.textAlign = \"center\";\r\n        canvasContext.fillText('게임종료', canvas.width/2, canvas.height/2);\r\n        //console.log('_countdown:' + _countdown)\r\n    }\r\n\r\n    const render_timer = (canvas, canvasContext) => {\r\n        if (undefined == canvas || undefined == canvasContext) {\r\n            return;\r\n        }\r\n\r\n        if (_gameFinished == true) {\r\n            return;\r\n        }\r\n\r\n        var fontSize = canvas.width/10;\r\n        canvasContext.fillStyle = 'white';\r\n        canvasContext.shadowColor = 'rgba(0,0,0,1)';\r\n        canvasContext.shadowBlur = 2;\r\n        canvasContext.shadowOffsetX = 3;\r\n        canvasContext.shadowOffsetY = 3;\r\n        canvasContext.font = fontSize + \"px Arial\";\r\n        canvasContext.textAlign = \"center\";\r\n        canvasContext.fillText(_countdown + '초', canvas.width/2, fontSize);\r\n        //console.log('_countdown:' + _countdown)\r\n    }\r\n\r\n    const render_score = (canvas, canvasContext) => {\r\n        if (undefined == canvas || undefined == canvasContext) {\r\n            return;\r\n        }\r\n        if (_gameFinished == true) {\r\n            return;\r\n        }\r\n\r\n        var fontSize = canvas.width/10;\r\n        canvasContext.fillStyle = 'white';\r\n        canvasContext.shadowColor = 'rgba(0,0,0,1)';\r\n        canvasContext.shadowBlur = 2;\r\n        canvasContext.shadowOffsetX = 3;\r\n        canvasContext.shadowOffsetY = 3;\r\n        canvasContext.font = fontSize + \"px Arial\";\r\n        canvasContext.textAlign = \"center\";\r\n\r\n        //var startDistance = parseInt(_frogMoveDistance);\r\n        canvasContext.fillText(_frogJumpScore, canvas.width/2, canvas.height/2);\r\n    }\r\n\r\n    const render_camera_distance = (canvas, canvasContext) => {\r\n        if (undefined == canvas || undefined == canvasContext) {\r\n            return;\r\n        }\r\n        if (_gameFinished == true) {\r\n            return;\r\n        }\r\n\r\n        if (PoseCommon_InScreenPose(_posenetPose) == false) {\r\n            var fontSize = canvas.width / 10;\r\n            canvasContext.fillStyle = 'white';\r\n            canvasContext.shadowColor = 'rgba(0,0,0,1)';\r\n            canvasContext.shadowBlur = 2;\r\n            canvasContext.shadowOffsetX = 3;\r\n            canvasContext.shadowOffsetY = 3;\r\n            canvasContext.font = fontSize + \"px Arial\";\r\n            canvasContext.textAlign = \"center\";\r\n            canvasContext.fillText('적절한 거리 유지', canvas.width / 2, canvas.height / 2 + fontSize);\r\n        }\r\n    }\r\n    \r\n    const render_canvas = () => {\r\n        if (undefined == _posenetPose) {\r\n            return;\r\n        }\r\n        var canvas = document.getElementById(\"canvasOverlay\");\r\n        if (undefined != canvas) {\r\n            const canvasContext = canvas.getContext('2d')\r\n            if (undefined != canvasContext) {\r\n                canvasContext.clearRect(0, 0, canvas.width, canvas.height);\r\n                render_tapeline(canvas, canvasContext);\r\n                render_cat(canvas, canvasContext);\r\n                render_frog(canvas, canvasContext);\r\n                render_timer(canvas, canvasContext);\r\n                render_score(canvas, canvasContext);\r\n                render_finish(canvas, canvasContext);\r\n                render_camera_distance(canvas, canvasContext);\r\n                //canvasContext.globalAlpha = 1.0;\r\n            }\r\n        }\r\n    }\r\n\r\n    const onDebugAddCount = () => {\r\n        if (_gameFinished == true) {\r\n            return;\r\n        }\r\n\r\n        SetFrogJumpScore(_frogJumpScore+1);\r\n      }\r\n\r\n    return (\r\n        <div>\r\n            <audio id=\"hitSound\" preload=\"auto\" src=\"two.mp3\" />\r\n            <img id=\"frog\" src=\"npc1.jpg\" style={{display:'none'}}></img>\r\n            <img id=\"cat\" src=\"cat.jpg\" style={{display:'none'}}></img>\r\n            <button onClick={onDebugAddCount}>add count</button>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    _posenetPose: state.posenet._posenetPose,\r\n    _countdown: state.countdown._countdown,\r\n    _frogJumpScore: state.score._frogJumpScore\r\n});\r\nconst mapDispatchToProps = { set_scene, SetFrogJumpScore, SetSubScene };\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PosenetFrogJumpPlay);\r\n","import React, { useRef } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { StartCountdown } from './../components/utils/SecondCountdown'\r\n\r\nimport { SetSubScene } from '../actions/scene';\r\nimport { SetCountDown } from '../actions/countdown';\r\nimport { ClosePosenet } from '../actions/posenet'\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport PoseNetCamera from '../components/posenet/PosenetCamera'\r\nimport PosenetFrogJumpTutorial from '../components/PoseNetGame/PosenetFrogJumpTutorial'\r\nimport PosenetFrogJumpPlay from '../components/PoseNetGame/PosenetFrogJumpPlay'\r\nimport PosenetPoseScan from '../components/PoseNetGame/PosenetPoseScan'\r\nimport PosenetGameReadyCountdown from '../components/PoseNetGame/PosenetGameReadyCountdown'\r\nimport configData from '../components/PoseNetGame/PosenetFrogJumpPlayConfigData.json'\r\n\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\r\nimport SkipNextIcon from '@material-ui/icons/SkipNext';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n    maxHeight: '100%',\r\n  },\r\n  wrapper: {\r\n    display: 'table',\r\n    width: 'auto',\r\n    position: 'relative',\r\n    width: '100%',\r\n  },\r\n\r\n  video: {\r\n    width: '100%',\r\n    border: '1px solid black',\r\n  },\r\n\r\n  countdown_renderer: {\r\n    width: '100%',\r\n  },\r\n\r\n  playButton: {\r\n    // backgroundImage: 'url(http://png-4.findicons.com/files/icons/2315/default_icon/256/media_play_pause_resume.png)',\r\n    // backgroundRepeat: 'no-repeat',\r\n    width: '50%',\r\n    height: '50%',\r\n    position: 'absolute',\r\n    left: '0%',\r\n    right: '0%',\r\n    top: '0%',\r\n    bottom: '0%',\r\n    margin: 'auto',\r\n    display: 'none',\r\n  },\r\n  skipButton: {\r\n    // backgroundImage: 'url(http://png-4.findicons.com/files/icons/2315/default_icon/256/media_play_pause_resume.png)',\r\n    // backgroundRepeat: 'no-repeat',\r\n    width: '50%',\r\n    height: '50%',\r\n    position: 'absolute',\r\n    left: '0%',\r\n    right: '0%',\r\n    top: '50%',\r\n    bottom: '0%',\r\n    margin: 'auto',\r\n    display: 'none',\r\n  },\r\n  largeIcon: {\r\n    fontSize: \"5em\"\r\n  }\r\n}));\r\n\r\n\r\nvar SCENE_TYPE = {\r\n  VIDEO: 0,\r\n  TUTORIAL_SCAN: 1,\r\n  TUTORIAL: 2,\r\n  TUTORIALSTOP: 3,\r\n  GAME_SCAN: 4,\r\n  COUNTDOWN: 5,\r\n  GAMEPLAY: 6,\r\n  GAMESTOP: 7,\r\n  GAMERESULT: 8\r\n};\r\nvar _sceneType = SCENE_TYPE.GAME_SCAN;\r\n\r\nexport const GameFrogJumpScene = ({ _posenetPose, _closePosenet, _currentSubScene, SetSubScene, SetCountDown, ClosePosenet }) => {\r\n  //console.log('GameFrogJumpScene component start');\r\n  const classes = useStyles();\r\n  const [_step, setStep] = React.useState(SCENE_TYPE.VIDEO);\r\n\r\n  const getStep = () => {\r\n    let contents = [];\r\n    switch (_sceneType) {\r\n      case SCENE_TYPE.VIDEO: {\r\n        contents.push(getHowToPlayContent());\r\n      } break;\r\n      case SCENE_TYPE.TUTORIAL_SCAN: {\r\n        getTutorialScanSceneCheck_Logic();\r\n        contents.push(getPoseNetMiniCamera());\r\n      } break;\r\n      case SCENE_TYPE.TUTORIAL: {\r\n        getTutorialSceneCheck_Logic();\r\n        contents.push(getPoseNetMiniCamera());\r\n      } break;\r\n      case SCENE_TYPE.TUTORIALSTOP: {\r\n        getTutorialStopCheck_Logic();\r\n        contents.push(getPoseNetMiniCamera());\r\n      } break;\r\n      case SCENE_TYPE.GAME_SCAN: {\r\n        getGameScanSceneCheck_Logic();\r\n        contents.push(getPoseNetCamera());\r\n      } break;\r\n      case SCENE_TYPE.COUNTDOWN: {\r\n        contents.push(getPoseNetCamera());\r\n      } break;\r\n      case SCENE_TYPE.GAMEPLAY: {\r\n        getGamePlaySceneCheck_Logic();\r\n        contents.push(getPoseNetCamera());\r\n      } break;\r\n      case SCENE_TYPE.GAMESTOP: {\r\n        getGameStopSceneCheck_Logic();\r\n        contents.push(getPoseNetCamera());\r\n      } break;\r\n      case SCENE_TYPE.GAMERESULT: {\r\n        contents.push(getGameResult());\r\n      } break;\r\n    }\r\n    return contents;\r\n  }\r\n\r\n  function changeSceneType(change) {\r\n    var preScene = _sceneType;\r\n    var nextScene = change;\r\n    setStep(nextScene);\r\n    _sceneType = change;\r\n    console.log('change scene tpye:' + preScene + '=>' + nextScene);\r\n\r\n    switch (nextScene) {\r\n      case SCENE_TYPE.TUTORIALSTOP: {\r\n        ClosePosenet('start');\r\n      } break;\r\n      case SCENE_TYPE.GAMESTOP: {\r\n        ClosePosenet('start');\r\n      } break;\r\n      case SCENE_TYPE.COUNTDOWN: {\r\n        ClosePosenet('');\r\n        StartCountdown(configData.ReadyCountdown, updateCountdownSeconds, countdown_complete);\r\n      } break;\r\n      case SCENE_TYPE.GAMEPLAY: {\r\n        ClosePosenet('');\r\n        StartCountdown(configData.PlayCountdown, updateCountdownSeconds, countdown_complete);\r\n      } break;\r\n    }\r\n  }\r\n\r\n  const updateCountdownSeconds = (seconds) => {\r\n    SetCountDown(seconds);\r\n  }\r\n\r\n  const getHowToPlayContent = () => {\r\n    return (\r\n      <div key=\"HowToPlay\" className={classes.wrapper} >\r\n        <video id='video' className={classes.video} onClick={onVideoClick} loop autoPlay>\r\n          <source type=\"video/mp4\" />\r\n          <source src=\"Squats.mp4\" type=\"video/ogg\" id=\"SelectSoundOutput\" />\r\n                Your browser does not support the video tag.\r\n        </video>\r\n        <div id='playButton' className={classes.playButton}>\r\n          <IconButton aria-label=\"play\" onClick={onPlayClick} >\r\n            <PlayArrowIcon className={classes.largeIcon} />\r\n          </IconButton>\r\n        </div>\r\n        <div id='skipButton' className={classes.skipButton}>\r\n          <IconButton aria-label=\"skip\" onClick={onSkipClick}>\r\n            <SkipNextIcon className={classes.largeIcon} />\r\n          </IconButton>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  const getPoseNetMiniCamera = () => {\r\n    return (\r\n      <div key=\"PoseNetMiniCamera\">\r\n        <PoseNetCamera showVideo={true} showMiniVideo={true} showDebugVideo={true} minPoseConfidence='0.1' />\r\n        {(_sceneType == SCENE_TYPE.TUTORIAL_SCAN) ?\r\n          (<PosenetPoseScan />) : undefined}\r\n        {(_sceneType == SCENE_TYPE.TUTORIAL) ?\r\n          (<PosenetFrogJumpTutorial />) : undefined}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  const getPoseNetCamera = () => {\r\n    return (\r\n      <div key=\"PoseNetCamera\">\r\n        <PoseNetCamera showMiniVideo={false} showVideo={true} showDebugVideo={true} minPoseConfidence='0.1' />\r\n        {(_sceneType == SCENE_TYPE.TUTORIAL_SCAN || _sceneType == SCENE_TYPE.GAME_SCAN) ?\r\n          (<PosenetPoseScan />) : undefined}\r\n        {(_sceneType == SCENE_TYPE.GAMEPLAY) ?\r\n          (<PosenetFrogJumpPlay />) : undefined}\r\n        {(_sceneType == SCENE_TYPE.COUNTDOWN) ?\r\n          (<PosenetGameReadyCountdown />) : undefined}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  const getTutorialScanSceneCheck_Logic = () => {\r\n    if (undefined == _posenetPose) {\r\n      return undefined;\r\n    }\r\n\r\n    if (_posenetPose.score >= configData.PoseMinConfidenceForGameReady) {\r\n      changeSceneType(SCENE_TYPE.TUTORIAL);\r\n    }\r\n  }\r\n\r\n  const getTutorialSceneCheck_Logic = () => {\r\n    if (undefined == _posenetPose) {\r\n      return undefined;\r\n    }\r\n\r\n    if (_currentSubScene == 'next') {\r\n      SetSubScene('');\r\n      changeSceneType(SCENE_TYPE.TUTORIALSTOP);\r\n    }\r\n  }\r\n\r\n  const getGamePlaySceneCheck_Logic = () => {\r\n    if (undefined == _posenetPose) {\r\n      return undefined;\r\n    }\r\n\r\n    if (_currentSubScene == 'next') {\r\n      SetSubScene('');\r\n      changeSceneType(SCENE_TYPE.GAMESTOP);\r\n    }\r\n  }\r\n\r\n  const getTutorialStopCheck_Logic = () => {\r\n    console.log('GameStop check:' + _closePosenet)\r\n    if (_closePosenet == 'complete') {\r\n      changeSceneType(SCENE_TYPE.GAME_SCAN);\r\n      ClosePosenet('');\r\n    }\r\n  }\r\n  \r\n  const getGameScanSceneCheck_Logic = () => {\r\n    if (undefined == _posenetPose) {\r\n      return undefined;\r\n    }\r\n\r\n    if (_posenetPose.score >= configData.PoseMinConfidenceForGameReady) {\r\n      changeSceneType(SCENE_TYPE.COUNTDOWN);\r\n    }\r\n  }\r\n\r\n  const getGameStopSceneCheck_Logic = () => {\r\n    console.log('GameStop check:' + _closePosenet)\r\n    if (_closePosenet == 'complete') {\r\n      changeSceneType(SCENE_TYPE.GAMERESULT);\r\n    }\r\n  }\r\n\r\n  const countdown_complete = () => {\r\n    console.log('countdown_complete:' + _sceneType);\r\n    if (_sceneType == SCENE_TYPE.COUNTDOWN) {\r\n      changeSceneType(SCENE_TYPE.GAMEPLAY);\r\n    }\r\n    else if (_sceneType == SCENE_TYPE.GAMEPLAY) {\r\n      changeSceneType(SCENE_TYPE.GAMESTOP);\r\n    }\r\n  }\r\n\r\n  const getGameResult = () => {\r\n    return (\r\n      <div key=\"GameResult\">\r\n        성공\r\n      </div>\r\n    );\r\n  }\r\n\r\n  const onVideoClick = () => {\r\n    console.log('video click');\r\n    const video = document.getElementById('video');\r\n    const playButton = document.getElementById('playButton');\r\n    const skipButton = document.getElementById('skipButton');\r\n    if (video.paused) {\r\n      video.play();\r\n      playButton.style.display = \"none\";\r\n      skipButton.style.display = \"none\";\r\n    } else {\r\n      video.pause();\r\n      playButton.style.display = \"block\";\r\n      skipButton.style.display = \"block\";\r\n    }\r\n  }\r\n\r\n  const onPlayClick = () => {\r\n    const video = document.getElementById('video');\r\n    const playButton = document.getElementById('playButton');\r\n    const skipButton = document.getElementById('skipButton');\r\n    video.play();\r\n    playButton.style.display = \"none\";\r\n    skipButton.style.display = \"none\";\r\n  }\r\n\r\n  const onSkipClick = () => {\r\n    changeSceneType(SCENE_TYPE.TUTORIAL_SCAN);\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      {getStep()}\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  _posenetPose: state.posenet._posenetPose,\r\n  _closePosenet: state.posenet._closePosenet,\r\n  _currentSubScene: state.scene._currentSubScene\r\n});\r\nconst mapDispatchToProps = { SetSubScene, SetCountDown, ClosePosenet };\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(GameFrogJumpScene);\r\n","import { PoseCommon_InScreenPose, PoseCommon_GetAngle, PoseCommon_GetAngleFromThreeParts } from './PoseCommon'\r\nimport { InBoundaryDegree } from './PosenetMath'\r\n\r\nexport function Plank_Step(pose) {\r\n    if (false == PoseCommon_InScreenPose(pose)) {\r\n        return false;\r\n    }\r\n\r\n    var leftArmAngle = PoseCommon_GetAngle(pose, \"leftShoulder\", \"leftElbow\");\r\n    //var rightArmAngle = PoseCommon_GetAngle(pose, \"rightShoulder\", \"rightElbow\");\r\n\r\n    // 팔 체크\r\n    var targetArmDegree = 180;\r\n    var boundaryArmDegree = 30;\r\n    if (true ==  InBoundaryDegree(targetArmDegree, leftArmAngle, boundaryArmDegree)) {\r\n        return true;\r\n    }\r\n    // if (true ==  InBoundaryDegree(targetArmDegree, rightArmAngle, boundaryArmDegree)) {\r\n    //     return true;\r\n    // }\r\n\r\n    // 무릎 체크\r\n    var leftKneeAngle = PoseCommon_GetAngleFromThreeParts(pose, \"leftKnee\", \"leftAnkle\", \"leftElbow\");\r\n    //var rightKneeAngle = PoseCommon_GetAngleFromThreeParts(pose, \"rightKnee\", \"rightAnkle\", \"rightElbow\");\r\n\r\n    // 팔 체크\r\n    var targetKneeDegree = 60;\r\n    var boundaryKneeDegree = 30;\r\n    if (true ==  InBoundaryDegree(targetKneeDegree, boundaryKneeDegree, boundaryKneeDegree)) {\r\n        return true;\r\n    }\r\n    // if (true ==  InBoundaryDegree(targetArmDegree, rightArmAngle, boundaryArmDegree)) {\r\n    //     return true;\r\n    // }\r\n    // var leftRatioPerHead = PoseCommon_GetLeftRatioPerHead(pose);\r\n    // var rightRatioPerHead = PoseCommon_GetRightRatioPerHead(pose);\r\n    // if (leftRatioPerHead <= 2 || rightRatioPerHead <= 2) {\r\n    //     return true;\r\n    // }\r\n\r\n    return false;\r\n}","import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { SetSubScene } from '../../actions/scene';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Plank_Step } from './../posenet/data/Plank'\r\nimport { PoseCommon_GetPosition, PoseCommon_GetPositionWithinConfidence, PoseCommon_InScreenPose } from './../posenet/data/PoseCommon'\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    wrapper: {\r\n      display: 'table',\r\n      width: 'auto',\r\n      position: 'relative',\r\n      width: '100%',\r\n      zIndex: '-3',\r\n    },\r\n    video: {\r\n      width: '100%',\r\n      border: '1px solid black',\r\n      zIndex: '-3',\r\n    }\r\n  }));\r\n\r\nvar _step = 0;\r\nexport const PosenetTowerOfBebelTutorial = ({ _current_scene, SetSubScene, _posenetPose }) => {\r\n    const classes = useStyles();\r\n\r\n    useEffect(() => {\r\n        //console.log('game countdowntime:' + _countdown);\r\n        control_video();\r\n        render_canvas();\r\n    }, [_posenetPose]);\r\n\r\n    const control_video = () => {\r\n        var video = document.getElementById('video');\r\n        if (undefined == video) {\r\n            return;\r\n        }\r\n\r\n        switch (_step) {\r\n            case 0: {\r\n                if (video.paused) {\r\n                    if (true == Plank_Step(_posenetPose)) {\r\n                        //SetSubScene('next');\r\n                    }\r\n                    //SetSubScene('next');\r\n                }\r\n                else if (video.currentTime >= 2.8) {\r\n                    video.pause();\r\n                    //SetSubScene('next');\r\n                }\r\n            } break;\r\n        }\r\n        //console.log(video.currentTime);\r\n    }\r\n\r\n    const render_title = (canvas, canvasContext) => {\r\n        if (undefined == canvas || undefined == canvasContext) {\r\n            return;\r\n        }\r\n        var fontSize = canvas.width/10;\r\n        canvasContext.fillStyle = 'white';\r\n        canvasContext.shadowColor = 'rgba(0,0,0,1)';\r\n        canvasContext.shadowBlur = 2;\r\n        canvasContext.shadowOffsetX = 3;\r\n        canvasContext.shadowOffsetY = 3;\r\n        canvasContext.font = fontSize + \"px Arial\";\r\n        canvasContext.textAlign = \"center\";\r\n        canvasContext.fillText('따라해 보세요', canvas.width/2, fontSize);\r\n    }\r\n\r\n    const render_camera_distance = (canvas, canvasContext) => {\r\n        if (undefined == canvas || undefined == canvasContext) {\r\n            return;\r\n        }\r\n\r\n        if (PoseCommon_InScreenPose(_posenetPose) == false) {\r\n            var fontSize = canvas.width / 10;\r\n            canvasContext.fillStyle = 'white';\r\n            canvasContext.shadowColor = 'rgba(0,0,0,1)';\r\n            canvasContext.shadowBlur = 2;\r\n            canvasContext.shadowOffsetX = 3;\r\n            canvasContext.shadowOffsetY = 3;\r\n            canvasContext.font = fontSize + \"px Arial\";\r\n            canvasContext.textAlign = \"center\";\r\n            canvasContext.fillText('적절한 거리 유지', canvas.width / 2, canvas.height / 2 + fontSize);\r\n        }\r\n    }\r\n    \r\n    const render_canvas = () => {\r\n        if (undefined == _posenetPose) {\r\n            return;\r\n        }\r\n        var canvas = document.getElementById(\"canvasOverlay\");\r\n        if (undefined != canvas) {\r\n            const canvasContext = canvas.getContext('2d')\r\n            if (undefined != canvasContext) {\r\n                canvasContext.clearRect(0, 0, canvas.width, canvas.height);\r\n                render_title(canvas, canvasContext);\r\n                render_camera_distance(canvas, canvasContext);\r\n                //canvasContext.globalAlpha = 1.0;\r\n            }\r\n        }\r\n    }\r\n    return (\r\n        <div key=\"HowToPlay\" className={classes.wrapper}>\r\n            <video id='video' className={classes.video} loop autoPlay>\r\n                <source type=\"video/mp4\" />\r\n                <source src=\"KneePush.mp4\" type=\"video/ogg\" id=\"SelectSoundOutput\" />\r\n                Your browser does not support the video tag.\r\n            </video>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    _posenetPose: state.posenet._posenetPose\r\n});\r\nconst mapDispatchToProps = { SetSubScene };\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PosenetTowerOfBebelTutorial);\r\n","import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { SetSubScene } from './../../actions/scene'\r\nimport { SetTowerScore } from '../../actions/score'\r\nimport { PoseCommon_InScreenPose, PoseCommon_GetPositionWithinConfidence } from './../posenet/data/PoseCommon'\r\nimport { Plank_Step } from './../posenet/data/Plank'\r\nimport configData from './PosenetTowerOfBabelConfigData.json'\r\n\r\nvar _countdownUpdateIntervalValue = 0;\r\nvar _addSpawnCount = 0;\r\nvar _gameFinished = false;\r\n\r\nexport const PosenetTowerOfBabelPlay = ({ _towerScore, SetTowerScore, SetSubScene, _posenetPose, _countdown }) => {\r\n    useEffect(() => {\r\n        //console.log('game countdowntime:' + _countdown);\r\n        update();\r\n        render_canvas();\r\n    }, [_posenetPose]);\r\n\r\n    const update = () => {\r\n        updateNpcSpawn();\r\n        updateGameFinish();\r\n    }\r\n\r\n    const updateGameFinish = () => {\r\n        if (_gameFinished == true) {\r\n            return;\r\n        }\r\n        if (undefined == _posenetPose) {\r\n            return;\r\n        }\r\n\r\n        if (configData.GoalFloor <= _towerScore) {\r\n            _gameFinished = true;\r\n            SetSubScene('next');\r\n        }\r\n\r\n        if (false == Plank_Step(_posenetPose)) {\r\n            _gameFinished = true;\r\n        }\r\n    }\r\n\r\n    const updateNpcSpawn = () => {\r\n        if (_gameFinished == true) {\r\n            return;\r\n        }\r\n        // 1초마다 한번 체크\r\n        if (_countdownUpdateIntervalValue == _countdown) {\r\n            return;\r\n        }\r\n        _countdownUpdateIntervalValue = _countdown;\r\n        _addSpawnCount++;\r\n\r\n        if (_addSpawnCount%configData.SpawnPerSecond != 0) {\r\n            return;\r\n        }\r\n\r\n        SetTowerScore(_towerScore+1);\r\n    }\r\n\r\n    const render_goal = (canvas, canvasContext) => {\r\n        if (undefined == canvas || undefined == canvasContext) {\r\n            return;\r\n        }\r\n        var fontSize = canvas.width/20;\r\n        canvasContext.fillStyle = 'white';\r\n        canvasContext.shadowColor = 'rgba(0,0,0,1)';\r\n        canvasContext.shadowBlur = 2;\r\n        canvasContext.shadowOffsetX = 3;\r\n        canvasContext.shadowOffsetY = 3;\r\n        canvasContext.font = fontSize + \"px Arial\";\r\n        canvasContext.textAlign = \"center\";\r\n        canvasContext.fillText('목표', canvas.width - fontSize*4, fontSize);\r\n        canvasContext.fillText(configData.GoalFloor + \"층\", canvas.width - fontSize*3, fontSize*2);\r\n    }\r\n\r\n    // const render_score = (canvas, canvasContext) => {\r\n    //     if (undefined == canvas || undefined == canvasContext) {\r\n    //         return;\r\n    //     }\r\n    //     var fontSize = canvas.width/10;\r\n    //     canvasContext.fillStyle = 'white';\r\n    //     canvasContext.shadowColor = 'rgba(0,0,0,1)';\r\n    //     canvasContext.shadowBlur = 2;\r\n    //     canvasContext.shadowOffsetX = 3;\r\n    //     canvasContext.shadowOffsetY = 3;\r\n    //     canvasContext.font = fontSize + \"px Arial\";\r\n    //     canvasContext.textAlign = \"center\";\r\n    //     canvasContext.fillText(_towerScore, canvas.width/2, canvas.height/2);\r\n    // }\r\n\r\n    const render_camera_distance = (canvas, canvasContext) => {\r\n        if (undefined == canvas || undefined == canvasContext) {\r\n            return;\r\n        }\r\n\r\n        if (PoseCommon_InScreenPose(_posenetPose) == false) {\r\n            var fontSize = canvas.width / 10;\r\n            canvasContext.fillStyle = 'white';\r\n            canvasContext.shadowColor = 'rgba(0,0,0,1)';\r\n            canvasContext.shadowBlur = 2;\r\n            canvasContext.shadowOffsetX = 3;\r\n            canvasContext.shadowOffsetY = 3;\r\n            canvasContext.font = fontSize + \"px Arial\";\r\n            canvasContext.textAlign = \"center\";\r\n            canvasContext.fillText('적절한 거리 유지', canvas.width / 2, canvas.height / 2 + fontSize);\r\n        }\r\n    }\r\n\r\n    // const SpringDamp = (\r\n    //     currPos,\r\n    //     trgPos,     // Target Position\r\n    //     prevTrgPos, // Previous Target Position\r\n    //     result,\r\n    //     springConst,  // Hooke's Constant\r\n    //     dampConst,    // Damp Constant\r\n    //     springLen) => {\r\n    //     var disp;           // Displacement\r\n    //     var velocity;       // Velocity   \r\n    //     var mx;\r\n    //     var z;\r\n    //     var len;\r\n    //     var dot;\r\n    //     var forceMag;         // Force Magnitude\r\n    //     // Calculate Spring Force\r\n    //     disp.x =\r\n    //         Vector_Minus(currPos, trgPos, disp);\r\n    //     Vector_Minus(prevTrgPos, trgPos, velocity);\r\n    //     len = Vector_Length(disp);\r\n    //     // get dot product\r\n    //     dot = DotProduct(disp, velocity);\r\n    //     forceMag = springConst * (springLen - len) +\r\n    //         dampConst * (dot / len);\r\n    //     Vector_Normalize(disp, z);\r\n    //     //disp *= forceMag;\r\n    //     Vector_Multiply(z, mx, forceMag);\r\n    //     printf(\"%0.2f %0.2f\\n\", mx[0], currPos[0]);\r\n    //     Vector_Add(currPos, mx, result);\r\n    // } // end of the function \r\n\r\n    const render_floor = (canvas, canvasContext) => {\r\n        if (undefined == canvas || undefined == canvasContext) {\r\n            return;\r\n        }\r\n        if (undefined == _posenetPose) {\r\n            return;\r\n        }\r\n        var targetPosition = PoseCommon_GetPositionWithinConfidence(_posenetPose, configData.MinPartConfidenceForTouch, \"nose\");\r\n        if (undefined == targetPosition) {\r\n            return;\r\n        }\r\n        //console.log(\"targetPosition:\" + targetPosition.y)\r\n        targetPosition.x = canvas.width - targetPosition.x;\r\n        const renderRadius = canvas.width/40;\r\n        for (var i = 0; i < _towerScore; i++) {\r\n            const image = document.getElementById('floor');\r\n            if (undefined != image) {\r\n                targetPosition.y -= renderRadius*2;\r\n                canvasContext.drawImage(image, targetPosition.x - renderRadius, targetPosition.y - renderRadius, renderRadius * 2, renderRadius * 2);\r\n            }\r\n        }\r\n\r\n        var fontSize = canvas.width/10;\r\n        canvasContext.beginPath();\r\n        canvasContext.setLineDash([8, 4]);\r\n        canvasContext.lineWidth = 4;\r\n        canvasContext.strokeStyle = 'white';\r\n        canvasContext.moveTo(0, targetPosition.y);\r\n        canvasContext.lineTo(canvas.width, targetPosition.y);\r\n        canvasContext.font = fontSize + \"px Arial\";\r\n        canvasContext.textAlign = \"center\";\r\n        canvasContext.fillText(_towerScore + '층', fontSize * 2, targetPosition.y - fontSize / 2);\r\n        canvasContext.stroke();\r\n    }\r\n\r\n    const render_canvas = () => {\r\n        if (undefined == _posenetPose) {\r\n            return;\r\n        }\r\n        var canvas = document.getElementById(\"canvasOverlay\");\r\n        if (undefined != canvas) {\r\n            const canvasContext = canvas.getContext('2d')\r\n            if (undefined != canvasContext) {\r\n                canvasContext.clearRect(0, 0, canvas.width, canvas.height);\r\n                render_goal(canvas, canvasContext);\r\n                //render_score(canvas, canvasContext);\r\n                render_floor(canvas, canvasContext);\r\n                render_camera_distance(canvas, canvasContext);\r\n                //canvasContext.globalAlpha = 1.0;\r\n            }\r\n        }\r\n    }\r\n    return (\r\n        <div>\r\n            <img id=\"floor\" src=\"floor.jpg\" style={{display:'none'}}></img>\r\n            <audio id=\"hitSound\" preload=\"auto\" src=\"two.mp3\" style={{display:'none'}} />\r\n        </div>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    _posenetPose: state.posenet._posenetPose,\r\n    _countdown: state.countdown._countdown,\r\n    _towerScore: state.score._towerScore\r\n});\r\nconst mapDispatchToProps = { SetTowerScore, SetSubScene };\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PosenetTowerOfBabelPlay);\r\n","import React, { useRef } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { StartCountdown } from './../components/utils/SecondCountdown'\r\n\r\nimport { SetSubScene } from '../actions/scene';\r\nimport { SetCountDown } from '../actions/countdown';\r\nimport { ClosePosenet } from '../actions/posenet'\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport PoseNetCamera from '../components/posenet/PosenetCamera'\r\nimport PosenetTowerOfBebelTutorial from '../components/PoseNetGame/PosenetTowerOfBebelTutorial'\r\nimport PosenetTowerOfBabelPlay from '../components/PoseNetGame/PosenetTowerOfBabelPlay'\r\nimport PosenetPoseScan from '../components/PoseNetGame/PosenetPoseScan'\r\nimport PosenetGameReadyCountdown from '../components/PoseNetGame/PosenetGameReadyCountdown'\r\nimport configData from '../components/PoseNetGame/PosenetTowerOfBabelConfigData.json'\r\n\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\r\nimport SkipNextIcon from '@material-ui/icons/SkipNext';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n    maxHeight: '100%',\r\n  },\r\n  wrapper: {\r\n    display: 'table',\r\n    width: 'auto',\r\n    position: 'relative',\r\n    width: '100%',\r\n  },\r\n\r\n  video: {\r\n    width: '100%',\r\n    border: '1px solid black',\r\n  },\r\n\r\n  countdown_renderer: {\r\n    width: '100%',\r\n  },\r\n\r\n  playButton: {\r\n    // backgroundImage: 'url(http://png-4.findicons.com/files/icons/2315/default_icon/256/media_play_pause_resume.png)',\r\n    // backgroundRepeat: 'no-repeat',\r\n    width: '50%',\r\n    height: '50%',\r\n    position: 'absolute',\r\n    left: '0%',\r\n    right: '0%',\r\n    top: '0%',\r\n    bottom: '0%',\r\n    margin: 'auto',\r\n    display: 'none',\r\n  },\r\n  skipButton: {\r\n    // backgroundImage: 'url(http://png-4.findicons.com/files/icons/2315/default_icon/256/media_play_pause_resume.png)',\r\n    // backgroundRepeat: 'no-repeat',\r\n    width: '50%',\r\n    height: '50%',\r\n    position: 'absolute',\r\n    left: '0%',\r\n    right: '0%',\r\n    top: '50%',\r\n    bottom: '0%',\r\n    margin: 'auto',\r\n    display: 'none',\r\n  },\r\n  largeIcon: {\r\n    fontSize: \"5em\"\r\n  }\r\n}));\r\n\r\n\r\nvar SCENE_TYPE = {\r\n  VIDEO: 0,\r\n  TUTORIAL_SCAN: 1,\r\n  TUTORIAL: 2,\r\n  TUTORIALSTOP: 3,\r\n  GAME_SCAN: 4,\r\n  COUNTDOWN: 5,\r\n  GAMEPLAY: 6,\r\n  GAMESTOP: 7,\r\n  GAMERESULT: 8\r\n};\r\nvar _sceneType = SCENE_TYPE.VIDEO;\r\n\r\nexport const GameTowerOfBabelScene = ({ _posenetPose, _closePosenet, _currentSubScene, SetSubScene, SetCountDown, ClosePosenet }) => {\r\n  //console.log('GameTowerOfBabelScene component start');\r\n  const classes = useStyles();\r\n  const [_step, setStep] = React.useState(SCENE_TYPE.VIDEO);\r\n\r\n  const getStep = () => {\r\n    let contents = [];\r\n    switch (_sceneType) {\r\n      case SCENE_TYPE.VIDEO: {\r\n        contents.push(getHowToPlayContent());\r\n      } break;\r\n      case SCENE_TYPE.TUTORIAL_SCAN: {\r\n        getTutorialScanSceneCheck_Logic();\r\n        contents.push(getPoseNetMiniCamera());\r\n      } break;\r\n      case SCENE_TYPE.TUTORIAL: {\r\n        getTutorialSceneCheck_Logic();\r\n        contents.push(getPoseNetMiniCamera());\r\n      } break;\r\n      case SCENE_TYPE.TUTORIALSTOP: {\r\n        getTutorialStopCheck_Logic();\r\n        contents.push(getPoseNetMiniCamera());\r\n      } break;\r\n      case SCENE_TYPE.GAME_SCAN: {\r\n        getGameScanSceneCheck_Logic();\r\n        contents.push(getPoseNetCamera());\r\n      } break;\r\n      case SCENE_TYPE.COUNTDOWN: {\r\n        contents.push(getPoseNetCamera());\r\n      } break;\r\n      case SCENE_TYPE.GAMEPLAY: {\r\n        getGamePlaySceneCheck_Logic();\r\n        contents.push(getPoseNetCamera());\r\n      } break;\r\n      case SCENE_TYPE.GAMESTOP: {\r\n        getGameStopSceneCheck_Logic();\r\n        contents.push(getPoseNetCamera());\r\n      } break;\r\n      case SCENE_TYPE.GAMERESULT: {\r\n        contents.push(getGameResult());\r\n      } break;\r\n    }\r\n    return contents;\r\n  }\r\n\r\n  function changeSceneType(change) {\r\n    var preScene = _sceneType;\r\n    var nextScene = change;\r\n    setStep(nextScene);\r\n    _sceneType = change;\r\n    console.log('change scene tpye:' + preScene + '=>' + nextScene);\r\n\r\n    switch (nextScene) {\r\n      case SCENE_TYPE.TUTORIALSTOP: {\r\n        ClosePosenet('start');\r\n      } break;\r\n      case SCENE_TYPE.GAMESTOP: {\r\n        ClosePosenet('start');\r\n      } break;\r\n      case SCENE_TYPE.COUNTDOWN: {\r\n        ClosePosenet('');\r\n        StartCountdown(configData.ReadyCountdown, updateCountdownSeconds, countdown_complete);\r\n      } break;\r\n      case SCENE_TYPE.GAMEPLAY: {\r\n        ClosePosenet('');\r\n        StartCountdown(configData.PlayCountdown, updateCountdownSeconds, countdown_complete);\r\n      } break;\r\n    }\r\n  }\r\n\r\n  const updateCountdownSeconds = (seconds) => {\r\n    SetCountDown(seconds);\r\n  }\r\n\r\n  const getHowToPlayContent = () => {\r\n    return (\r\n      <div key=\"HowToPlay\" className={classes.wrapper} >\r\n        <video id='video' className={classes.video} onClick={onVideoClick} loop autoPlay>\r\n          <source type=\"video/mp4\" />\r\n          <source src=\"KneePush.mp4\" type=\"video/ogg\" id=\"SelectSoundOutput\" />\r\n                Your browser does not support the video tag.\r\n        </video>\r\n        <div id='playButton' className={classes.playButton}>\r\n          <IconButton aria-label=\"play\" onClick={onPlayClick} >\r\n            <PlayArrowIcon className={classes.largeIcon} />\r\n          </IconButton>\r\n        </div>\r\n        <div id='skipButton' className={classes.skipButton}>\r\n          <IconButton aria-label=\"skip\" onClick={onSkipClick}>\r\n            <SkipNextIcon className={classes.largeIcon} />\r\n          </IconButton>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  const getPoseNetMiniCamera = () => {\r\n    return (\r\n      <div key=\"PoseNetMiniCamera\">\r\n        <PoseNetCamera showVideo={true} showMiniVideo={true} showDebugVideo={true} minPoseConfidence='0.1' />\r\n        {(_sceneType == SCENE_TYPE.TUTORIAL_SCAN) ?\r\n          (<PosenetPoseScan />) : undefined}\r\n        {(_sceneType == SCENE_TYPE.TUTORIAL) ?\r\n          (<PosenetTowerOfBebelTutorial />) : undefined}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  const getPoseNetCamera = () => {\r\n    return (\r\n      <div key=\"PoseNetCamera\">\r\n        <PoseNetCamera showMiniVideo={false} showVideo={true} showDebugVideo={true} minPoseConfidence='0.1' />\r\n        {(_sceneType == SCENE_TYPE.TUTORIAL_SCAN || _sceneType == SCENE_TYPE.GAME_SCAN) ?\r\n          (<PosenetPoseScan />) : undefined}\r\n        {(_sceneType == SCENE_TYPE.GAMEPLAY) ?\r\n          (<PosenetTowerOfBabelPlay />) : undefined}\r\n        {(_sceneType == SCENE_TYPE.COUNTDOWN) ?\r\n          (<PosenetGameReadyCountdown />) : undefined}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  const getTutorialScanSceneCheck_Logic = () => {\r\n    if (undefined == _posenetPose) {\r\n      return undefined;\r\n    }\r\n\r\n    if (_posenetPose.score >= configData.PoseMinConfidenceForGameReady) {\r\n      changeSceneType(SCENE_TYPE.TUTORIAL);\r\n    }\r\n  }\r\n\r\n  const getTutorialSceneCheck_Logic = () => {\r\n    if (undefined == _posenetPose) {\r\n      return undefined;\r\n    }\r\n\r\n    if (_currentSubScene == 'next') {\r\n      SetSubScene('');\r\n      changeSceneType(SCENE_TYPE.TUTORIALSTOP);\r\n    }\r\n  }\r\n\r\n  const getGamePlaySceneCheck_Logic = () => {\r\n    if (undefined == _posenetPose) {\r\n      return undefined;\r\n    }\r\n\r\n    if (_currentSubScene == 'next') {\r\n      SetSubScene('');\r\n      changeSceneType(SCENE_TYPE.GAMESTOP);\r\n    }\r\n  }\r\n\r\n  const getTutorialStopCheck_Logic = () => {\r\n    console.log('GameStop check:' + _closePosenet)\r\n    if (_closePosenet == 'complete') {\r\n      changeSceneType(SCENE_TYPE.GAME_SCAN);\r\n      ClosePosenet('');\r\n    }\r\n  }\r\n  \r\n  const getGameScanSceneCheck_Logic = () => {\r\n    if (undefined == _posenetPose) {\r\n      return undefined;\r\n    }\r\n\r\n    if (_posenetPose.score >= configData.PoseMinConfidenceForGameReady) {\r\n      changeSceneType(SCENE_TYPE.COUNTDOWN);\r\n    }\r\n  }\r\n\r\n  const getGameStopSceneCheck_Logic = () => {\r\n    console.log('GameStop check:' + _closePosenet)\r\n    if (_closePosenet == 'complete') {\r\n      changeSceneType(SCENE_TYPE.GAMERESULT);\r\n    }\r\n  }\r\n\r\n  const countdown_complete = () => {\r\n    console.log('countdown_complete:' + _sceneType);\r\n    if (_sceneType == SCENE_TYPE.COUNTDOWN) {\r\n      changeSceneType(SCENE_TYPE.GAMEPLAY);\r\n    }\r\n    else if (_sceneType == SCENE_TYPE.GAMEPLAY) {\r\n      changeSceneType(SCENE_TYPE.GAMESTOP);\r\n    }\r\n  }\r\n\r\n  const getGameResult = () => {\r\n    return (\r\n      <div key=\"GameResult\">\r\n        성공\r\n      </div>\r\n    );\r\n  }\r\n\r\n  const onVideoClick = () => {\r\n    console.log('video click');\r\n    const video = document.getElementById('video');\r\n    const playButton = document.getElementById('playButton');\r\n    const skipButton = document.getElementById('skipButton');\r\n    if (video.paused) {\r\n      video.play();\r\n      playButton.style.display = \"none\";\r\n      skipButton.style.display = \"none\";\r\n    } else {\r\n      video.pause();\r\n      playButton.style.display = \"block\";\r\n      skipButton.style.display = \"block\";\r\n    }\r\n  }\r\n\r\n  const onPlayClick = () => {\r\n    const video = document.getElementById('video');\r\n    const playButton = document.getElementById('playButton');\r\n    const skipButton = document.getElementById('skipButton');\r\n    video.play();\r\n    playButton.style.display = \"none\";\r\n    skipButton.style.display = \"none\";\r\n  }\r\n\r\n  const onSkipClick = () => {\r\n    changeSceneType(SCENE_TYPE.TUTORIAL_SCAN);\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      {getStep()}\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  _posenetPose: state.posenet._posenetPose,\r\n  _closePosenet: state.posenet._closePosenet,\r\n  _currentSubScene: state.scene._currentSubScene\r\n});\r\nconst mapDispatchToProps = { SetSubScene, SetCountDown, ClosePosenet };\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(GameTowerOfBabelScene);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { set_scene } from '../actions/scene';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport BottomNavigation from '@material-ui/core/BottomNavigation';\r\nimport BottomNavigationAction from '@material-ui/core/BottomNavigationAction';\r\n\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport VideoLibraryIcon from '@material-ui/icons/VideoLibrary';\r\nimport SportsEsportsIcon from '@material-ui/icons/SportsEsports'\r\nimport AddAPhotoIcon from '@material-ui/icons/AddAPhoto';\r\nimport AddPhotoAlternateIcon from '@material-ui/icons/AddPhotoAlternate';\r\nimport SportsHandballIcon from '@material-ui/icons/SportsHandball';\r\nimport LocationCityIcon from '@material-ui/icons/LocationCity';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        width: '100%',\r\n        // height: '100%',\r\n        bottom: 0,\r\n        position: 'fixed',\r\n        flexGrow: 1,\r\n    },\r\n});\r\n\r\nexport const SceneNavigation = ({ _current_scene, set_scene }) => {\r\n    const classes = useStyles();\r\n    const [value, setValue] = React.useState(0);\r\n\r\n    return (\r\n        <BottomNavigation\r\n            value={value}\r\n            onChange={(event, newValue) => {\r\n                set_scene(newValue);\r\n                setValue(newValue);\r\n            }}\r\n            showLabels\r\n            className={classes.root}\r\n        >\r\n            <BottomNavigationAction value=\"VideoPlay\" label=\"Video\" icon={<FavoriteIcon />} />\r\n            <BottomNavigationAction value=\"PoseNetCamera\" label=\"PoseNetCamera\" icon={<AddAPhotoIcon />} />\r\n            <BottomNavigationAction value=\"PoseNetImage\" label=\"PoseNetImage\" icon={<AddPhotoAlternateIcon />} />\r\n            <BottomNavigationAction value=\"PoseNetVideo\" label=\"PoseNetVideo\" icon={<VideoLibraryIcon />} />\r\n\r\n            <BottomNavigationAction value=\"DoodongGmae\" label=\"두둥\" icon={<SportsHandballIcon />} />\r\n            <BottomNavigationAction value=\"FrogJumpGmae\" label=\"개구리점프\" icon={<SportsHandballIcon />} />\r\n            <BottomNavigationAction value=\"TowerOfBabel\" label=\"바벨탑\" icon={<LocationCityIcon />} />\r\n            \r\n        </BottomNavigation>\r\n    );\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n    _current_scene: state.scene._current_scene\r\n});\r\nconst mapDispatchToProps = { set_scene };\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SceneNavigation);","import React from 'react';\r\n\r\nimport { connect } from 'react-redux';\r\nimport { set_scene } from '../actions/scene';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport PoseNetCameraScene from './PoseNetCameraScene'\r\nimport PoseNetImageScene from './PoseNetImageScene'\r\nimport PoseNetVideoScene from './PoseNetVideoScene'\r\nimport GameDooDoongScene from './GameDooDoongScene'\r\nimport GameFrogJumpScene from './GameFrogJumpScene'\r\nimport GameTowerOfBabelScene from './GameTowerOfBabelScene'\r\n\r\nimport SceneNavigation from './SceneNavigation'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    '& > *': {\r\n      width: '100%',\r\n    },\r\n  }\r\n}));\r\n\r\nexport const IndexScene = ({ _current_scene, set_scene }) => {\r\n  console.log('Index_scene component start');\r\n  const classes = useStyles();\r\n\r\n  const getActiveScene = () => {\r\n    switch(_current_scene) {\r\n      case 'VideoPlay': {\r\n        return (<PoseNetCameraScene />);\r\n      }\r\n      case 'PoseNetCamera': {\r\n        return (<PoseNetCameraScene />);\r\n      }\r\n      case 'PoseNetImage': {\r\n        return (<PoseNetImageScene />);\r\n      }\r\n      case 'PoseNetVideo': {\r\n        return (<PoseNetVideoScene />);\r\n      }\r\n      case 'DoodongGmae': {\r\n        return (<GameDooDoongScene />);\r\n      }\r\n      case 'FrogJumpGmae': {\r\n        return (<GameFrogJumpScene />)\r\n      }\r\n      case 'TowerOfBabel' : {\r\n        return (<GameTowerOfBabelScene />);\r\n      }\r\n      default: {\r\n        return (<SceneNavigation />);\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      {getActiveScene()}\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  _current_scene: state.scene._current_scene\r\n});\r\nconst mapDispatchToProps = { set_scene };\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(IndexScene);","import React from 'react';\r\nimport './App.css';\r\nimport IndexScene from './scene/IndexScene'\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <IndexScene />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import { SET_SCENE, SETSUBSCENE } from '../actions/scene'\r\n\r\nconst initialState = {\r\n    _current_scene: 'IndexScene',\r\n    _currentSubScene: ''\r\n};\r\n\r\nexport default function scene(state = initialState, action) {\r\n    switch(action.type) {\r\n        case SET_SCENE:\r\n            console.log('SET_SCENE:' + action._change_scene);\r\n            return Object.assign({}, state, {\r\n                _current_scene: action._change_scene\r\n            });\r\n        case SETSUBSCENE:\r\n            console.log('SETSUBSCENE:' + action._changeSubScene);\r\n            return Object.assign({}, state, {\r\n                _currentSubScene: action._changeSubScene\r\n            });\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\n\r\n//export default scene;","import { SETPOSENETPOSE, CLOSEPOSENET } from '../actions/posenet'\r\n\r\nconst initialState = {\r\n    _posenetPose: undefined,\r\n    _closePosenet: '',\r\n};\r\n\r\nexport default function posenet(state = initialState, action) {\r\n    //console.log('reducer posenet action call:' + action.type);\r\n    switch(action.type) {\r\n        case SETPOSENETPOSE:\r\n            //console.log('SETPOSENETPOSE:');\r\n            //console.log(action._posenetPose);\r\n            return Object.assign({}, state, {\r\n                _posenetPose: action._posenetPose\r\n            });\r\n        case CLOSEPOSENET:\r\n            console.log('CLOSEPOSENET:' + action._closePosenet);\r\n            return Object.assign({}, state, {\r\n                _closePosenet: action._closePosenet\r\n            });\r\n        default:\r\n            return state;\r\n    }   \r\n}","import { SET_COUNTDOWN } from '../actions/countdown'\r\n\r\nconst initialState = {\r\n    _countdown: 0,\r\n};\r\n\r\nexport default function countdown(state = initialState, action) {\r\n    switch(action.type) {\r\n        case SET_COUNTDOWN:\r\n            console.log('SET_COUNTDOWN:' + action._countdown);\r\n            return Object.assign({}, state, {\r\n                _countdown: action._countdown\r\n            });\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\n\r\n//export default scene;","import { SET_DOODOONG_SCORE, SET_FROGJUMP_SCORE, SET_TOWER_SCORE } from '../actions/score'\r\n\r\nconst initialState = {\r\n    _doodoongScore: 0,\r\n    _frogJumpScore: 0,\r\n    _towerScore: 0\r\n};\r\n\r\nexport default function score(state = initialState, action) {\r\n    switch (action.type) {\r\n        case SET_DOODOONG_SCORE:\r\n            console.log('SET_DOODOONG_SCORE:' + action._doodoongScore);\r\n            return Object.assign({}, state, {\r\n                _doodoongScore: action._doodoongScore\r\n            });\r\n        case SET_FROGJUMP_SCORE:\r\n            console.log('SET_FROGJUMP_SCORE:' + action._frogJumpScore);\r\n            return Object.assign({}, state, {\r\n                _frogJumpScore: action._frogJumpScore\r\n            });\r\n        case SET_TOWER_SCORE:\r\n            console.log('SET_TOWER_SCORE:' + action._towerScore);\r\n            return Object.assign({}, state, {\r\n                _towerScore: action._towerScore\r\n            });\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import { combineReducers } from 'redux';\r\n\r\nimport scene from './scene'\r\nimport posenet from './posenet'\r\nimport countdown from './countdown'\r\nimport score from './score'\r\n\r\nexport default combineReducers({\r\n    scene,\r\n    posenet,\r\n    countdown,\r\n    score,\r\n    // 다른 리듀서를 만들게되면 여기에 넣어줌..\r\n});","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nimport { createStore } from 'redux';\r\nimport { Provider  } from 'react-redux';\r\nimport rootReducer from './reducers';\r\n\r\nconst appElement = document.getElementById('root');\r\n\r\n// 리덕스 개발자도구 적용\r\nconst devTools = window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__();\r\nconst store = createStore(rootReducer, devTools);\r\n// const store = createStore(rootReducer);\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  appElement\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}